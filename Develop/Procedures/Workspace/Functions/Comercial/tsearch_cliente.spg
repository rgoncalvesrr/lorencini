/**
   Gera documento pesquisável para o cliente informado

	@author    Ricardo Gonçalves
	@date      24/10/2020
	@trigger

   @param cliente_ código do cliente

	Histórico
	-------------------------------------------------------------------------------------------------------------------
 */
DROP FUNCTION tsearch_cliente(integer,boolean);

Create or Replace Function tsearch_cliente(
   in cliente_ integer,
   in atualiza_ boolean = true)
Returns tsvector As
$$
declare
   r     record;
   docto tsvector;
begin
   docto := null;

   select empresa, nome_chave, endereco, bairro, cidade, estado, cnpj, cpf, inscricao, website, email, rg,
          situacao 
     into r
     from tbclientes 
    where codigo = cliente_; 
   
   if found then      
      docto := sys_fts_compose(docto, cliente_);
      docto := sys_fts_compose(docto, r.empresa);
      docto := sys_fts_compose(docto, r.nome_chave);      
      docto := sys_fts_compose(docto, r.endereco);
      docto := sys_fts_compose(docto, r.bairro);
      docto := sys_fts_compose(docto, r.cidade);
      docto := sys_fts_compose(docto, r.estado);
      docto := sys_fts_compose(docto, r.cnpj);      
      docto := sys_fts_compose(docto, r.cpf);
      docto := sys_fts_compose(docto, r.inscricao);
      docto := sys_fts_compose(docto, r.website);
      docto := sys_fts_compose(docto, r.email);
      docto := sys_fts_compose(docto, r.rg);
      docto := sys_fts_compose(docto, r.situacao);
   end if;

   if atualiza_ then
      if docto is null then
         delete 
           from api.ftscustomers
          where tenantid = cliente_;
      else
         insert into api.ftscustomers
            (tenantid, fts)
         values
            (cliente_, docto)
         on conflict (tenantid) 
            do update set fts = excluded.fts;
      end if;
   end if;

   return docto;
end;
$$
language plpgsql;