/**
   Valida o processamento dos laudos

	@author    Ricardo Gonçalves
	@date      06/04/2011 21:56:54
	@trigger   labamostras_rel B IUD

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
   15/08/2011 19:01:13  v2    Ricardo Gonçalves.
      [+] Geração da assinatura digital.

   08/09/2011 22:44:33  v3    Ricardo Gonçalves.
      [+] Preenchimento do código de serviços.

   04/10/2011 16:12:26  v4    Ricardo Gonçalves.
      [+] Checagem de preenchimento das referências no encerramento do relatório.
   
   08/12/2011 19:29:36  v5    Ricardo Gonçalves.
      [*] Tratamento do retrocesso de etapa do laudo.
   
   25/01/2012 14:25:02  v6    Ricardo Gonçalves.
      [-] Os históricos de ensaios não estavam sendo gerados corretamente por conta da ordenação do conteúdo base dos
         históricos.
   20/05/2016 01:21:03  v7    Ricardo Gonçalves.
      [+] Registro da data de apontamento dos resultados dos ensaios.
*/
CREATE OR REPLACE FUNCTION labamostras_rel_hatu(
   in in_laudo integer)
RETURNS void AS
$$
Declare
   _SREL_ASSINADO    constant integer = 3;
   _SREL_LIBERADO    constant integer = 4;

   xcur        refcursor;
   r           record;
   rh          record;
   icol        integer;
   irecno_res  integer;
   iensaio     labamostras_res.ensaio_recno%type;
   emissoes    date array[6];
   resultados  numeric array[6];
   bFound      boolean;
BEGIN
   delete 
   from
      labamostras_hres 
   where
      laudo = in_laudo;
   
   -- Obtem laudos que terão seus históricos processados   
   select
      rel.relato_recno, rel.emissao, a.equip_recno
   into
      r
   from
      labamostras_rel rel
   join
      labamostras a on 
      a.recno = rel.amostra
   where
      rel.recno = in_laudo
   order by
      rel.emissao;
   
   if not Found then
      raise '[[Laudo % não localizado no sistema.]]', in_laudo;
   end if;
   
   perform sys_flag_mark('labamostras_rel', in_laudo);

   open xcur for 
      select 
         e.ensaio_recno, rel.recno laudo, rel.emissao, e.valor, e.recno recno_res
      from 
         labamostras_rel rel
      join
         labamostras a on
         a.recno = rel.amostra and
         a.equip_recno = r.equip_recno
      join
         labamostras_res e on 
         e.laudo = rel.recno and
         e.relato_recno = rel.relato_recno
      where
         rel.recno <> in_laudo and 
         rel.relato_recno = r.relato_recno and 
         rel.status in (_SREL_ASSINADO, _SREL_LIBERADO) and 
         rel.assinatura is not null and 
         rel.emissao < r.emissao
      order by 
         e.ensaio_recno, rel.emissao desc;
   
   Fetch xcur into rh;
   bFound := FOUND;

   iensaio     := rh.ensaio_recno;
   irecno_res  := rh.recno_res;   
   emissoes    := array[null, null, null, null, null, null];
   resultados  := array[null, null, null, null, null, null];

   update 
      labamostras_rel 
   set 
      d1 = emissoes[1], d2 = emissoes[2], d3 = emissoes[3], d4 = emissoes[4], d5 = emissoes[5], d6 = emissoes[6] 
   where 
      recno = in_laudo; 


   while bFound loop
      -- Insere na lista de histórico da amostra
      insert into labamostras_hres 
         (relato_recno,   ensaio_recno,    laudo,    laudo_dep)
      values                  
         (r.relato_recno, rh.ensaio_recno, in_laudo, rh.laudo);

      if icol between 1 and 6 then
         if emissoes is not null then
            emissoes[icol] := rh.emissao;
         end if;
         resultados[icol] := rh.valor;
      end if;

      Fetch xcur into rh;
      bFound := FOUND;      
      icol := icol + 1;

      if rh.ensaio_recno <> iensaio or not bFound then
         if emissoes is not null then
            update
               labamostras_rel 
            set
               d1 = emissoes[1], d2 = emissoes[2], d3 = emissoes[3], d4 = emissoes[4], d5 = emissoes[5], d6 = emissoes[6] 
            where
               recno = in_laudo; 

            emissoes := null;
         end if;

         update 
            labamostras_res 
         set
            v1 = resultados[1], v2 = resultados[2], v3 = resultados[3], v4 = resultados[4], v5 = resultados[5], v6 = resultados[6]            
         where
            recno = irecno_res;            
         
         resultados  := array[null,null,null,null,null,null];         
         iensaio     := rh.ensaio_recno;
         irecno_res  := rh.recno_res;
         icol        := 1;
      end if;
   End Loop;

   close xcur;

   perform sys_flag_del('labamostras_rel', in_laudo);
END;
$$
LANGUAGE 'plpgsql' VOLATILE;