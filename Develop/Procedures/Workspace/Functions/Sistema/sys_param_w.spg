/**
	Verifica se a tabela foi marcada por alguma rotina interna
  	@author 	Ricardo Gonçalves
  	@date 	06/08/2008 11:47:07
  	@param 	in_table_ nome da tabela que contém o registro
  				marcado
	@param	in_recno registro da tabela marcado
  	@return 	retorna verdadeiro caso haja um registo na tabela
  				Sysflag para in_table_ e in_recno informados
*/
--- Varchar
Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue varchar)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, in_pvalue, 1, 'V');
END;
$$
language plpgsql;

Create or Replace Function sys_uparam_w(
	in in_pname varchar(100),
	in in_pvalue varchar)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, in_pvalue, 2, 'V');
END;
$$
language plpgsql;


-- Interger
Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue integer)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 1, 'I');
END;
$$
language plpgsql;

Create or Replace Function sys_uparam_w(
	in in_pname varchar(100),
	in in_pvalue integer)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 2, 'I');
END;
$$
language plpgsql;

-- Date
Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue date)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 1, 'D');
END;
$$
language plpgsql;

Create or Replace Function sys_uparam_w(
	in in_pname varchar(100),
	in in_pvalue date)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 2, 'D');
END;
$$
language plpgsql;

-- Data e Hora
Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue timestamp)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 1, 'T');
END;
$$
language plpgsql;

Create or Replace Function sys_uparam_w(
	in in_pname varchar(100),
	in in_pvalue timestamp)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 2, 'T');
END;
$$
language plpgsql;

-- Boolean
Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue boolean)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 1, 'B');
END;
$$
language plpgsql;

Create or Replace Function sys_uparam_w(
	in in_pname varchar(100),
	in in_pvalue boolean)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 2, 'B');
END;
$$
language plpgsql;

-- Numeric
Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue numeric)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 1, 'N');
END;
$$
language plpgsql;

Create or Replace Function sys_uparam_w(
	in in_pname varchar(100),
	in in_pvalue numeric)
Returns Boolean As
$$
BEGIN
	return sys_param_w(in_pname, cast(in_pvalue as text), 2, 'N');
END;
$$
language plpgsql;

Create or Replace Function sys_param_w(
	in in_pname varchar(100),
	in in_pvalue text,
	in in_ptype integer,
   in in_pdatatype varchar(1))
Returns Boolean As
$$
Declare
   r  record;
BEGIN
   if exists(
      select 1
        from sys_cfg
       where pname = lower(in_pname))
   then
      if in_ptype = 1 then
        	update sys_cfg
   	     set pvalue = in_pvalue
      	 where pname = lower(in_pname);
      end if;
   else
      insert into sys_cfg (pname, pvalue, ptype)
           values         (in_pname, in_pvalue, in_pdatatype);
 	end if;

 	-- parâmetro de usuário
 	if in_ptype = 2 then
      if exists(
         select 1
           from sys_cfgusr
          where pname = lower(in_pname))
      then
         update sys_cfgusr
            set pvalue = in_pvalue
          where pname = lower(in_pname)
            and username = sys_user();
      else
         insert into sys_cfgusr (pname, username, pvalue)
              values            (in_pname, sys_user(), in_pvalue);
      end if;
 	end if;

 	return true;
END;
$$
language plpgsql;