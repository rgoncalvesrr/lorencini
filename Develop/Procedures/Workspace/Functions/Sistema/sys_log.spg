/**
   Rotinas para registro de log

   @author  Ricardo Gonçalves
   @date    11/01/2011 14:38:53
   @trigger

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/

/*
   Rotina completa.

   @param vlog Log - titleção curta
   @param thist Histórico
   @param itable Tabela de source do log
   @param itable_recno Registro de source do log
   @param lrotate Indica se o log pode sofrer rotação
   @param itipo Tipo de log: 1 - Criação / 2 - Alteração / 3 - Exclusão / 4 - Outros
   @param ilevel Nível de log: 1 - Informação / 2 - Atenção / 3 - Crítico / 4 - Debug

*/
create or replace function log(
   in vlog varchar,
   in thist text,
   in itable integer,
   in itable_recno integer,
   in lrotate boolean,   
   in ilevel log_level)
  RETURNS log$ AS
$$
Declare
   xlog   log$;
begin
   xlog.title := vlog;
   xlog.detail := thist;
   xlog.rotate := lrotate;  
   xlog.source_table := itable;
   xlog.source_recno := itable_recno;    
   xlog.level := ilevel;
   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in thist text)
  RETURNS log$ AS
$$
Declare
   xlog   log$;
begin
   xlog.title := vlog;
   xlog.detail := thist;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar)
  RETURNS log$ AS
$$
Declare
   xlog   log$;
begin
   xlog.title := vlog;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in thist text,
   in itable integer,
   in itable_recno integer)
  RETURNS log$ AS
$$
Declare
   xlog   log$;
begin
   xlog.title := vlog;
   xlog.detail := thist;   
   xlog.source_table := itable;
   xlog.source_recno := itable_recno;    
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,   
   in itable integer,
   in itable_recno integer)
  RETURNS log$ AS
$$
Declare
   xlog   log$;
begin
   xlog.title := vlog;   
   xlog.source_table := itable;
   xlog.source_recno := itable_recno;    
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in in_log log$)
  RETURNS log$ AS
$$
begin
   if in_log.title is null then
      raise '[[Não é possível registrar log sem título]]';
   end if;

   in_log.detail := coalesce(in_log.detail, in_log.title);
   in_log.account := coalesce(in_log.account, sys_account(), sys_account_def());   
   in_log.level := coalesce(in_log.level, 'info');
   in_log.rotate := coalesce(in_log.rotate, true);

   -- Gera registro de log
   insert into sys_logs
      (title,        detail,        rotate,        source_table,        source_recno,        level, status_code, account)
   values        
      (in_log.title, in_log.detail, in_log.rotate, in_log.source_table, in_log.source_recno, in_log.level, in_log.status_code, in_log.account)
   returning registred, recno into in_log.registred, in_log.recno;

   return in_log;

END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_trace(
   in vlog varchar)
  RETURNS log$ AS
$$
declare  
   xlog  log$;
begin
   xlog.title := vlog;
   xlog.level := 'trace';
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_debug(
   in vlog varchar)
  RETURNS log$ AS
$$
declare  
   xlog  log$;
begin
   xlog.title := vlog;
   xlog.level := 'debug';
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_info(
   in vlog varchar)
  RETURNS log$ AS
$$
declare  
   xlog  log$;
begin
   xlog.title := vlog;
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_warning(
   in vlog varchar)
  RETURNS log$ AS
$$
declare  
   xlog  log$;
begin
   xlog.title := vlog;
   xlog.level := 'warn';
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_error(
   in vlog varchar)
  RETURNS log$ AS
$$
declare  
   xlog  log$;
begin
   xlog.title := vlog;
   xlog.level := 'error';
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;