/**
   Rotinas para registro de log

   @author  Ricardo Gonçalves
   @date    11/01/2011 14:38:53
   @trigger

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/

/*
   Rotina completa.

   @param vlog Log - descrição curta
   @param thist Histórico
   @param itable Tabela de origem do log
   @param itable_recno Registro de origem do log
   @param lrotacionar Indica se o log pode sofrer rotação
   @param itipo Tipo de log: 1 - Criação / 2 - Alteração / 3 - Exclusão / 4 - Outros
   @param inivel Nível de log: 1 - Informação / 2 - Atenção / 3 - Crítico / 4 - Debug

*/
create or replace function log(
   in vlog varchar,
   in thist text,
   in itable integer,
   in itable_recno integer,
   in lrotacionar boolean,
   in itipo integer,
   in inivel integer)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;
   xlog.historico := thist;
   xlog.rotacionar := lrotacionar;  
   xlog.origem := itable;
   xlog.origem_recno := itable_recno; 
   xlog.tipo := itipo;
   xlog.nivel := inivel;
   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in thist text,
   in itipo integer)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;
   xlog.historico := thist;
   xlog.rotacionar := false;     
   xlog.tipo := itipo;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in thist text)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;
   xlog.historico := thist;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in itipo integer)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;
   xlog.tipo := itipo;
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in thist text,
   in itipo integer,
   in itable integer,
   in itable_recno integer)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;
   xlog.historico := thist;   
   xlog.origem := itable;
   xlog.origem_recno := itable_recno; 
   xlog.tipo := itipo;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in vlog varchar,
   in itipo integer,
   in itable integer,
   in itable_recno integer)
  RETURNS rlog AS
$$
Declare
   xlog   rlog;
begin
   xlog.descri := vlog;   
   xlog.origem := itable;
   xlog.origem_recno := itable_recno; 
   xlog.tipo := itipo;   
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log(
   in in_log rlog)
  RETURNS rlog AS
$$
begin
   if in_log.descri is null then
      raise '[[Não é possível registrar log sem descrição]]';
   end if;

   in_log.historico := coalesce(in_log.historico, in_log.descri);
   in_log.username := coalesce(in_log.username, sys_user(), sys_user_def());
   in_log.tipo := coalesce(in_log.tipo, 4); -- outros
   in_log.nivel := coalesce(in_log.nivel, 1); -- info
   in_log.rotacionar := coalesce(in_log.rotacionar, true);

   -- Gera registro de log
   insert into sys_log
      (descri,        historico,        rotacionar,        origem,        origem_recno,        tipo,        nivel)
   values        
      (in_log.descri, in_log.historico, in_log.rotacionar, in_log.origem, in_log.origem_recno, in_log.tipo, in_log.nivel);

   return in_log;

END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_info(
   in vlog varchar)
  RETURNS rlog AS
$$
declare  
   xlog  rlog;
begin
   xlog.descri := vlog;
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_warning(
   in vlog varchar)
  RETURNS rlog AS
$$
declare  
   xlog  rlog;
begin
   xlog.descri := vlog;
   xlog.nivel := 2;
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_error(
   in vlog varchar)
  RETURNS rlog AS
$$
declare  
   xlog  rlog;
begin
   xlog.descri := vlog;
   xlog.nivel := 3;
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;

create or replace function log_debug(
   in vlog varchar)
  RETURNS rlog AS
$$
declare  
   xlog  rlog;
begin
   xlog.descri := vlog;
   xlog.nivel := 4;
   return log(xlog);
END;
$$ LANGUAGE 'plpgsql' VOLATILE;