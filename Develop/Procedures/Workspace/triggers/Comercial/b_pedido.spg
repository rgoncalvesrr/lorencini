/**
   Processamento da tabela de registro do comodato

   @author    Ricardo Gonçalves
   @date      28/02/2016 14:13:36
   @trigger   pedido B IUD

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   23/06/2018  Ricardo Gonçalves
      [*] Ajuste no processamento dos status do pedido.
            10.Em Digitação / 20.Aprovação de Crédito / 30.Aguardando Autorização / 40.Em Remessa /
            50.Aguardando Amostras / 60.Executando / 70.Executado / 99.Cancelado

   07/11/2018  Ricardo Gonçalves
      [+] Checagem dos serviços quando tiver indicado no pedido serviços de laboratório. Se não houver, ao menos 1 serviço
            com controle de vidraria e consumo, o sistema não deixará o pedido avançar para o estado inválido.

   12/04/2019  Ricardo Gonçalves
      [+] Verificação de remessa em curso antes do cancelamento do pedido
*/
CREATE OR REPLACE FUNCTION b_pedido()
  RETURNS trigger AS
$$
Declare
   _STPENDENTE    constant integer := 0; -- Processando pelo sistema
   _STANALISE     constant integer := 1; -- Em Análise
   _STAPROVSIS    constant integer := 2; -- Aprovado Sistema
   _STAPROVHUM    constant integer := 3; -- Aprovado Analista
   _STREPROVADO   constant integer := 4; -- Reprovado

   r                 record;
   rx                record;
   msg               text;
   CRLF              text;
   xlog              log$;   
   status_analise_   public.cred_analise.status%type;
BEGIN
   CRLF := chr(13) || chr(10);
   xlog.source_table := sys_origem('pedido');

   if tg_op <> 'DELETE' then
      if tg_op = 'INSERT' then
         new.criado := localtimestamp;
         new.status := 10; -- força estado de digitação
         new.frete := coalesce(new.frete, 0);
         new.dec_conf := coalesce(new.dec_conf, true);
         xlog.source_recno := new.recno;

         if new.indice is null then
            select recno
              into new.indice
              from indices
             where vigencia <= new.criado
             order by vigencia desc
             limit 1;
         end if;

         -- Tenta localizar um contato
         if new.solicitante is null then
            select nome
              into new.solicitante
              from clientes_contatos
             where cliente = new.codigo
               and contato_comercial
               and ativo
               and email is not null
             order by padrao desc, nome
             limit 1;
         end if;

         if new.solicitante is null then
            raise '[[Não foi possível localizar um contato ativo, com e-mail cadastrado e possa receber o pedido de venda. Verifique. Pedido %]]', new.recno;
         end if;

         xlog.title := 'Solicitante definido pelo sistema';
         xlog.detail := 'Solicitante definido automaticamente pelo sistema';
         xlog.level := 'warn';

         perform log(xlog);
      end if;

      if not new.remessa then
         new.frete := 0;
         new.frascos := 0;
         new.seringas := 0;
         new.correio := null;
      end if;

      new.cliente := coalesce(new.cliente, new.codigo);

      if tg_op = 'UPDATE' then
         if new.status = 10 and old.status = 10 then
            return new;
         end if;

         -- Liberação do pedido
         if old.status = 10 and new.status = 20 then
            msg := '';
            if new.markup is null then
               msg := msg || CRLF || '- Markup não aprovado.';
            end if;

            select email, contato_mail, id_vendedor
              into r
              from tbclientes
             where codigo = new.codigo;

            if r.email is null and r.contato_mail is null then
               msg := msg || CRLF || '- E-mail no cadastro do cliente não está preenchido.';
            end if;

            if r.id_vendedor is null then
               msg := msg || CRLF || '- Vendedor no cadastro do cliente não está preenchido.';
            end if;

            -- Validando informações de remessa
            if new.remessa then
               if new.frascos + new.seringas = 0 then
                  msg := msg || CRLF || '- Há indicação de remessa mas a quantidade de frascos e/ou seringas está zerada.';
               end if;

               if new.envio < 3 then
                  if new.frete = 0 then
                     msg := msg || CRLF || '- Tipo de envio exige valor de frete.';
                  end if;

                  if new.envio = 1 and new.correio is null then
                     msg := msg || CRLF || '- Materiais enviados via correios exigem cálculo de SEDEX.';
                  end if;
               else
                  new.frete := 0;
                  new.correio := null;
               end if;

            end if;

            if msg <> '' then
               raise '[[O pedido % não pode ser liberado porque apresenta as inconsistências:%]]', new.recno, msg;
            end if;
         -- Aprovação do pedido
         elsif old.status = 20 and new.status = 30 then         
            -- Gera análise de crédito para o pedido
            if new.analise is not null then                           
               -- consultando situação da análise
               select 
                  status
               into 
                  status_analise_
               from 
                  public.cred_analise
               where 
                  recno = new.analise;

               -- Deixa o pedido em análise de crédito
               if status_analise_ < _STAPROVSIS then
                  new.status := 20;
               end if;

               -- Cancela o pedido
               if status_analise_ = _STREPROVADO then
                  new.status := 99;
                  if new.obs <> '' then
                     new.obs := format('%s%s%s', new.obs, chr(13) + chr(10), chr(13) + chr(10));
                  end if;

                  new.obs := format('%sPedido cancelado pelo analista de crédito!', new.obs);
               end if;            
            end if;
         elsif old.status = 30 and new.status = 40 then
            if not new.remessa then
               raise '[[O pedido % não tem remessa.]]', new.recno;
            end if;
         elsif old.status = 30 and new.status = 50 then
            if not new.laboratorio then
               raise '[[O pedido % não tem serviços de análise.]]', new.recno;
            end if;

            if new.remessa and not exists(
               select 1
                 from labproc
                where pedido = new.recno
                  and situacao = 4)
            then
               raise '[[O pedido % não pode aguardar amostras porque a remessa não foi completada.]]', new.recno;
            end if;

            -- Verifica se há algum serviço que possibilite a análise
            if not exists(
               select 1
                 from pedido_serv ps
                      join servicos s
                        on s.codserv = ps.codserv
                       and s.vidraria > 0
                       and s.consumo > 0
                where ps.pedido = new.recno)
            then
               raise '[[O pedido % não pode aguardar amostras porque os serviços não tem vidraria e consumo.]]', new.recno;
            end if;
         elsif old.status in (30, 50) and new.status = 60 then -- validando a entrada do pedido em produção
            -- Verificando se o email de autorização foi enviado com sucesso
            if old.status = 30 then
               if exists(
                  select 1
                  from sys_email
                  where table_ = sys_origem('pedido')
                     and recno_ = new.recno
                     and status = 2)
               then
                  new.autorizado := localtimestamp;
               else
                  raise '[[O pedido % não pode entrar em produção porque o e-mail com pedido não foi enviado para o cliente!]]', new.recno;
               end if;
            end if;

            if old.status = 30 and new.remessa then
               raise '[[O pedido % não pode entrar em produção porque não há registro de remessa.', new.recno;
            end if;

            -- Validando a associação das amostras com o pedido
            if old.status = 50 then
               msg := '';

               for r in (
                  select a.codserv, b.descri, a.qtd, a.saldo
                    from pedido_serv a
                         join servicos b
                           on b.codserv = a.codserv
                         join servicos_grupo c
                           on c.recno = b.grupo
                          and c.laboratorio
                   where a.pedido = new.recno
                     and a.saldo > 0)
               loop
                  msg := msg || CRLF || format('O serviço %s - %s exige %s amostras. Falta associar %s amostras',
                     r.codserv, r.descri, to_char(r.qtd, 'FM99999990'), to_char(r.saldo, 'FM99999990'));
               end loop;

               if msg <> '' then
                  msg := 'O pedido não pode entrar em produção porque:' || CRLF || msg;

                  raise '[[%s]]', msg;
               end if;               
            end if;

         -- Cancelamento do pedido, verificação de remessa em processo
         elsif old.status in (20, 30, 40) and new.status = 99 then
            if exists(
               select 1
                 from labproc
                where pedido = new.recno
                  and situacao between 1 and 6)
            then
               raise '[[O pedido % não pode ser cancelado porque a remessa já foi iniciada!]]', new.recno;
            end if;
         else
            if new.status = 70 and old.status <> 60 then
               raise '[[O pedido % executou uma sequência inválida de alteração de status.', new.recno;
            end if;
         end if;
      end if;

      return new;
   end if;

   if old.status > 10 then
      raise '[[O pedido % não pode ser excluído porque passou da fase de digitação!]]', old.recno;
   end if;

   perform sys_flag_mark('pedido', old.recno);
   
   return old;
END;
$$
LANGUAGE 'plpgsql' VOLATILE;