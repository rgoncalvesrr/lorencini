/**
   Prepara e valida o cabeçalho da NF

	@author    Ricardo Gonçalves
	@date      30/05/2009 14:31:46
	@trigger   NF BIUD

	Histórico
	----------------------------------------------------------------------------
*/
Create or Replace Function b_nf()
Returns Trigger
as
$$
Declare
   fvlnfmat    tb_orcamentos.vlnfmat%type;
   fvlnfsrv    tb_orcamentos.vlnfsrv%type;
   vnome_chave tbclientes.nome_chave%type;
   iTipo       nf_serie.tipo%type;
   inf         nf.nf%type;
   ridx        record;
Begin
   if tg_op = 'DELETE' then
      if old.status = 2 then
         raise '[[Nota fiscal % série % está faturada e não pode ser excluída.]]', old.nf, old.serie;
      end if;

      if old.status = 3 then
         raise '[[Nota fiscal % série % está cancelada e não pode ser excluída.]]', old.nf, old.serie;
      end if;

      return old;
   else
      if tg_op = 'INSERT' then
         new.status := 1;
         inf := null;

         -- Obtem o número da próxima nota fiscal
         select nf_atual, tipo
           into inf, iTipo
           from nf_serie
          where serie = new.serie;

         if new.nf is null then
            new.nf := inf;
         end if;

         select nome_chave
           into vnome_chave
           from tbclientes
          where codigo = new.codigo;

         select sum(m.vlmat), sum(m.vlsrvfixo + m.vlsrvvar + m.vlmobra + m.vldespe)
           into fvlnfmat, fvlnfsrv
           from tb_orcamentos o
                join markup m
                  on m.recno = o.markup
          where idcliente = new.codigo
            and status = 3;
            
         if not found then
            raise '[[ Cliente % não possui orçamento a faturar.]]', vnome_chave;
         end if;

         -- Tipo 1 - Materiais
         -- Tipo 2 - Serviços
         if iTipo = 1 then
            if fvlnfmat <= 0 then
               raise '[[Cliente % não possui orçamentos de materiais que podem ser faturados. Verifique!]]', vnome_chave;
            end if;
         elsif iTipo = 2 then
            if fvlnfsrv <= 0 then
               raise '[[Cliente % não possui orçamentos de serviços que podem ser faturados. Verifique!]]', vnome_chave;
            end if;
         else
            raise '[[Tipo de série desconhecida.]]';
         end if;

         -- Incrementa a série da NF
         if inf is not null then
            update nf_serie
               set nf_atual = nf_atual + 1
             where serie = new.serie;
         end if;
      end if;

      if tg_op = 'UPDATE' then
         if old.status = 3 then
            raise '[[Notas fiscais canceladas não podem sofrer alterações.]]';
         end if;

         -- Faturamento
         if new.status = 2 and old.status = 1 then
            if new.valor <= 0 then
               raise '[[Não é possível faturar notas fiscais com valor 0.00. Verifique!]]';
            end if;

            if not exists(
               select 1
                 from nf_itens
                where recno_nf = new.recno)
            then
               raise '[[Não é possível faturar notas fiscais sem itens. Verifique!]]';
            end if;
         end if;

         -- Altera o status das notas fiscais faturada para digitação
         if old.status = 2 then
            new.status := 1;
         end if;
      end if;

      return new;
   end if;
End;
$$
language plpgsql;