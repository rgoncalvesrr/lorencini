/**
   Preenchimento do valor do serviço executado sobre a amostra

   @author    Ricardo Gonçalves
   @date      20/11/2017
   @trigger   pedido_amostras B IUD

   HistÃ³rico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
   
   17/10/2023  Ricardo Gonçalves
      [+] Adiciona proteção que impede amostras sem saldo ou que não nas depências da Lorencini
*/
CREATE OR REPLACE FUNCTION b_pedido_amostras()
RETURNS trigger AS
$$
Declare
   batu     boolean;
   icodigo  pedido.codigo%type;
   r        record;
   rcli     record;
BEGIN
   if tg_op = 'DELETE' then
      return old;
   end if;

   batu := tg_op = 'INSERT';

   if not batu then
      batu := new.codserv <> old.codserv;
   end if;

   if batu then
      select 
         consumo
      into 
         new.consumo
      from 
         servicos
      where 
         codserv = new.codserv; 
   end if;

   select 
      codigo
   into 
      icodigo
   from 
      pedido
   where 
      recno = new.pedido; 

   select
      a.estado, a.codigo
   into
      r
   from
      labamostras a
   where 
      recno = new.amostra;

   -- Verificando se amostra pertence ao cliente do pedido
   if r.codigo <> icodigo then
      select 
         empresa, nome_chave, mask_cnpj_cpf(coalesce(cnpj, cpf)) cnpj 
      into
         rcli
      from 
         tbclientes 
      where 
         codigo = icodigo;

      raise '[[A amostra % não pertence ao cliente % - %. Nome curto: %. CNPJ: %]]', new.amostra, icodigo, rcli.empresa, rcli.nome_chave, rcli.cnpj;
   end if;

   if r.estado < 40 then
      raise '[[A amostra % não está na Lorencini!]]', new.amostra;
   end if;

   if r.estado > 50 then
      raise '[[A amostra % jã foi consumida!]]', new.amostra;
   end if;

   return new;
END;
$$
LANGUAGE 'plpgsql' VOLATILE;