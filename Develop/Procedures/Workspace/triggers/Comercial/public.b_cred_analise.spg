/**
   Prepara dados para análise de crédito

   @author    Ricardo Gonçalves
   @date      29/03/2022
   @trigger   public.b_cred_analise B IUD

   Casos em que o sistema requer análise de crédito por humanos
      - Quando houver pendência interna;
      - Quando houver títulos quitados em atraso;
      - Quando houver títulos em atraso;
      - Quando o percentual de títulos em atraso seja maior que 10%;
      - Quando houver pendências no Serasa;

   Critérios para consulta automática no Serasa
      - Primeira análise de crédito do cliente;
      - Análise de crédito anterior liberada manualmente;
      - Quando a última análise estiver negativada e a data de consulta for superior a 10 dias, o sistema deve fazer uma nova consulta;

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
create or replace function public.b_cred_analise()
returns trigger as
$$
declare
   _STPENDENTE    constant integer := 0; -- Processando pelo sistema
   _STANALISE     constant integer := 1; -- Em Análise
   _STAPROVSIS    constant integer := 2; -- Aprovado Sistema
   _STAPROVHUM    constant integer := 3; -- Aprovado Analista
   _STREPROVADO   constant integer := 4; -- Reprovado
   _CRLF          constant varchar := chr(13) + chr(10);

   -- Tipos de consulta automática SERASA
   _SERASAPF      constant integer := 4; -- Crednet Light + Protesto Estadual
   _SERASAPJ      constant integer := 8; -- Crednet Light + Protesto Estadual

   r           public.vposicao_financeira%rowtype;
   ra          public.cred_analise%rowtype;
   tipo_       tspeed.cred_consultas.tipo%type;
   emissao_    tspeed.cred_consultas.emissao%type;
   status_     tspeed.cred_consultas.status%type;
   rserasa     record;
   ckSerasa    boolean := true;
begin
   if tg_op = 'DELETE' then
      return old;
   end if;

   select titulos,                    titulos_quitados_atraso,         titulos_atraso,         titulos_a_vencer,
          ptitulos_atrasados,         total,                           recebido,               receber,
          atrasado, pri_compra,       ult_compra,                      menor_compra,           maior_compra,
          maior_atraso
     into r.titulos,            r.titulos_quitados_atraso, r.titulos_atraso, r.titulos_a_vencer,
          r.ptitulos_atrasados, r.total,                   r.recebido,       r.receber,
          r.atrasado,           r.pri_compra,              r.ult_compra,     r.menor_compra,
          r.maior_compra,       r.maior_atraso
     from vposicao_financeira
    where id_cli = new.cliente;

   if not Found then
      r.titulos := coalesce(r.titulos, 0);
      r.titulos_quitados_atraso := coalesce(r.titulos_quitados_atraso, 0);
      r.titulos_atraso := coalesce(r.titulos_atraso, 0);
      r.titulos_a_vencer := coalesce(r.titulos_a_vencer, 0);
      r.ptitulos_atrasados := coalesce(r.ptitulos_atrasados, 0);
      r.total := coalesce(r.total, 0);
      r.recebido := coalesce(r.recebido, 0);
      r.receber := coalesce(r.receber, 0);
      r.atrasado := coalesce(r.atrasado, 0);
      r.pri_compra := r.pri_compra;
      r.ult_compra := r.ult_compra;
      r.menor_compra := coalesce(r.menor_compra, 0);
      r.maior_compra := coalesce(r.maior_compra, 0);
      r.maior_atraso := coalesce(r.maior_atraso, 0);
   end if;

   if tg_op = 'INSERT' then
      new.solicitante := coalesce(new.solicitante, public.sys_account(), public.sys_account_def());
   end if;

   if new.status = _STPENDENTE then
      new.obs := fin_ckbloqueio(new.cliente);

      if new.obs <> '' then
         ckSerasa := false;
         new.obs := format('%s%s', _CRLF, new.obs);
      end if;

      if r.titulos_quitados_atraso > 0 then
         new.obs := format('%s%s%s', new.obs, _CRLF, '- Cliente possui títulos quitados em atraso.');
      end if;

      if r.titulos_atraso > 0 then
         ckSerasa := false;
         new.obs := format('%s%s- Cliente possui %s títulos em atraso no valor R$ %s.', new.obs, _CRLF, r.titulos_atraso, to_char(r.atrasado, 'FM999G999G990D90'));
      end if;

      if r.ptitulos_atrasados > 10 then
         ckSerasa := false;
         new.obs := format('%s%s- Índice de títulos atrasados superior a 10%%. Índice atual: %s%%', new.obs, _CRLF, to_char(r.ptitulos_atrasados, 'FM990'));
      end if;

      if new.obs <> '' then
         new.obs := format('Anotações Internas:%s', new.obs);
      end if;

      -- Consultando Serasa
      if ckSerasa and new.serasa is null then
         select *
           into ra
           from public.cred_analise
          where recno <> new.recno
          order by recno desc
          limit 1;

         if not FOUND then -- análise anterior não existe
            -- Tenta localiza um consulta ao Serasa com emissão inferior a 10 dias
            -- t - 10 dias
            emissao_ := clock_timestamp() - interval '10 days';

            select recno
              into new.serasa
              from tspeed.cred_consultas
             where cliente = new.cliente
               and emissao > emissao_
               and env = 'prod';
         else
            -- Usa consulta ao serasa da análise anterior caso tenha sido uma aprovação automática
            if ra.status < _STAPROVHUM then
               new.serasa := ra.serasa;
            end if;
         end if;

         if new.serasa is null then
            tipo_ := _SERASAPJ;

            if exists(
               select 1
               from tbclientes
               where codigo = new.cliente
                  and cpf is not null)
            then
               tipo_ := _SERASAPF;
            end if;

            new.serasa := public.cred_consultar_serasa(new.recno, tipo_);
         end if;
      end if;

      -- Verificando situação serasa
      if new.serasa is not null then
         select status
           into status_
           from tspeed.cred_consultas
          where recno = new.serasa;

         if status_ = 'compendencias' then
            select sum(qtd) qtd, sum(total) total
              into rserasa
              from tspeed.cred_resumos
             where consulta = new.serasa;

            if new.obs <> '' then
               new.obs := format('%s%s%s', new.obs, _CRLF, _CRLF);
            end if;

            new.obs := format('Anotações SERASA:');
            new.obs := format('%s%s- %s título(s) pendente(s) no valor de R$ %s', new.obs, _CRLF,
               to_char(rserasa.qtd, 'FM999G990'), to_char(rserasa.total, 'FM999G999G990D00'));
         end if;

         if status_ = 'aguardando' then
            new.status := _STPENDENTE;
            return new;
         end if;
      end if;

      if new.obs <> '' then
         new.status := _STANALISE;
      else
         new.status := _STAPROVSIS;
      end if;
   end if;

   if new.status > _STANALISE and old.status <= _STANALISE then
      new.aprovador := coalesce(new.aprovador, public.sys_account(), public.sys_account_def());
      new.aprovacao := clock_timestamp();

      new.titulos = r.titulos;
      new.titulos_quitados_atraso := r.titulos_quitados_atraso;
      new.titulos_em_atraso := r.titulos_atraso;
      new.titulos_a_receber := r.titulos_a_vencer;
      new.ptitulos_atrasados := r.ptitulos_atrasados;
      new.total := r.total;
      new.recebido := r.recebido;
      new.receber := r.receber;
      new.atrasado := r.atrasado;
      new.pri_compra := r.pri_compra;
      new.ult_compra := r.ult_compra;
      new.menor_compra := r.menor_compra;
      new.maior_compra := r.maior_compra;
      new.maior_atraso := r.maior_atraso;
   end if;

   return new;
end;
$$
language plpgsql;