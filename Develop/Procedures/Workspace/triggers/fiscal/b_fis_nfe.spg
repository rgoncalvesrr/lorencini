/**
   Processamento dos lançamentos bancários

	@author    Ricardo Gonçalves
	@date      02/03/2009 17:44:30
	@trigger   fin_banco AIUD

	Histórico
	-------------------------------------------------------------------------------------------------------------------
 */
Create or Replace Function b_fis_nfe()
Returns trigger as
$$
Declare
   _CNPJ_LORENCINI   constant varchar := '04824941000109';
   _TIPO_ENTRADA     constant integer := 1;
   _TIPO_SAIDA       constant integer := 2;
   _NFE_VALIDA       constant integer := 1;

   nfe      nfe$;
   serie_   integer; 
Begin
   if TG_OP = 'DELETE' then
      if (old.frascos_saldo <> old.frascos) or (old.seringas_saldo <> old.seringas) then
         raise '[[A nota % já foi consumida por laudos e não pode ser excluída!]]', old.chave;
      end if;

      return old;
   end if;
   
   if tg_op = 'INSERT' then
      nfe := fis_chave2nfe(new.chave);
      new.registro := coalesce(new.registro, clock_timestamp());
      new.frascos_saldo := sys_iif(new.tipo = _TIPO_SAIDA, 0, new.frascos);
      new.seringas_saldo := sys_iif(new.tipo = _TIPO_SAIDA, 0, new.seringas);
      new.account := coalesce(sys_account(), sys_account_def());

      serie_ := cast(nfe.serie as integer);

      if nfe.emitente <> _CNPJ_LORENCINI and new.tipo = _TIPO_ENTRADA and  not (serie_ between 890 and 899)  then
         select codigo
           into new.cliente
           from tbclientes
          where cnpj = nfe.emitente
            and situacao = 'ATIVO';
         
         if not found then
            raise '[[Não há correspondência entre o CNPJ % e um cliente ativo.]]', nfe.emitente;
         end if;
      end if;

      new.status := _NFE_VALIDA;
   end if;

   return new;
End;
$$
language plpgsql;