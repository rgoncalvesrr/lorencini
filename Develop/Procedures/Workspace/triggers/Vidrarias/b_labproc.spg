/**
   Valida informações do processo de remessa de seringas e frascos

   @author    Ricardo Gonçalves
   @date      20/12/2010 12:36:33
   @trigger   labproc B IUD

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
   
   03/08/2016 10:52:46  v2    Ricardo Gonçalves
      [+] Inclusão e checagem do tipo de envio da remessa
*/
CREATE OR REPLACE FUNCTION b_labproc()
  RETURNS trigger AS
$$
Declare
   AGUARDANDO  constant integer := 0;
   REMESSA     constant integer := 1;
   VOLUME      constant integer := 2;
   DESPACHO    constant integer := 3;
   EXPEDICAO   constant integer := 4;
   RASTREIO    constant integer := 5;

   
   r           record;
   vfrascos    varchar;
   vseringas   varchar;
   msg         text;
BEGIN
   if tg_op <> 'DELETE' then
      if new.frascos = 0 and new.seringas = 0 then
         raise '[[Para registrar a solicitação de remessa % a quantidade de frascos e/ou seringas não pode ser zero!]]', new.recno;
      end if;

      -- Se o envio não for via SEDEX, zera cobranca
      if new.envio > 2 then
         new.correio := null;
      end if;

      -- SEDEX
      if new.envio = 1 and new.correio is null and new.remessa::date > '2016-08-06'::date then
         raise '[[O registro da solicitação da remessa % não pode ser concluído porque o cálculo do SEDEX não foi localizado.]]', new.recno;
      end if;

      if tg_op = 'INSERT' then
         -- Solicitação de remessa aguardando ação
         new.situacao := AGUARDANDO;
         new.atualizacao := localtimestamp;
         new.emissao := localtimestamp;
      else
         -- Não permite mudanças de quantidade de frascos e seringas quando o sistema passa da etapa de solicitação
         if new.situacao <> AGUARDANDO and old.situacao <> AGUARDANDO then
            if new.frascos != old.frascos or new.seringas != old.seringas then
               raise '[[Não é permitido alterar a quantidade de frascos e/ou seringas após o início da preperação da remessa %]]', new.recno;
            end if;
         end if;

         if new.situacao <> old.situacao then
            -- Verificando se foram geradas todas as etiquetas para os frascos e seringas
            if new.situacao = VOLUME then
               select sum(sys_iif(tipo = 1, 1, 0)) as frascos, sum(sys_iif(tipo = 2, 1, 0)) as seringas
                 into r
                 from labprocxequip
                where labproc_recno = new.recno;

               r.frascos := coalesce(r.frascos, 0);
               r.seringas := coalesce(r.seringas, 0);

               if new.frascos - r.frascos != 0 or new.seringas - r.seringas != 0 then
                  vfrascos := '';
                  vseringas := '';
                  if new.frascos - r.frascos != 0 then
                     vfrascos := Format('%s frascos', new.frascos - r.frascos);
                  end if;

                  if new.seringas - r.seringas != 0 then
                     if vfrascos <> '' then
                        vfrascos := vfrascos || ' e';
                     end if;
                     vseringas := Format('%s seringas', new.seringas - r.seringas);
                  end if;

                  raise '[[Não é possível montar volumes para remessa % porque é necessário registrar % %]]', new.recno, vfrascos, vseringas;
               end if;
            end if;

            -- Verificando se todas as etiquetas para os frascos e seringas estão associadas a um volume
            if new.situacao = DESPACHO then
               if exists(
                  select 1
                    from labprocxequip pe
                   where pe.labproc_recno = new.recno
                     and pe.volume is null)
               then
                  raise '[[Não é possível processar despacho para remessa % porque existem etiquetas sem volume!]]', new.recno;
               end if;
            end if;

            -- Verifica se a remessa pode entrar em estado de rastreio
            if new.situacao = RASTREIO then
               if exists(
                  select 1
                    from labvol
                   where labproc_recno = new.recno
                     and exp_dh is null)
               then
                  raise '[[A remessa % não entrar em estado de aguardando rastreamento porque existem volumes não expedidos!]]', new.recno;
               end if;
            end if;

            new.atualizacao := localtimestamp;
         end if;
      end if;

      if not exists(
         select 1
           from tbclientes c
                join estados e
                  on e.uf = c.estado
          where codigo = new.codigo)
      then
         raise '[[Defina o estado (UF) no cadastro do cliente e tente criar o processo novamente.]]';
      end if;

      return new;
   else
      if old.situacao > AGUARDANDO then
         raise '[[O processo de remessa de vidraria nº % não pode ser excluído porque passou da digitação]]', old.recno;
      end if;

      return old;
   end if;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;