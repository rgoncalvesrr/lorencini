/**
   Pré processamento da tabela de volumes

   @author    Ricardo Gonçalves
   @date      20/12/2010 12:36:33
   @trigger   labvol B IUD

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
CREATE OR REPLACE FUNCTION b_labvol()
  RETURNS trigger AS
$$
Declare
   ivolumes    labproc.volumes%type;
   icomps      labproc.volumes%type;
BEGIN
   if tg_op <> 'DELETE' then
      if tg_op = 'INSERT' then
         new.account := coalesce(new.account, sys_account(), sys_account_def());

         -- Verifica se volume pode ser criado. Conta o nº de etiquetas disponíveis
         -- Contando volumes vazios
         select count(*)
           into ivolumes
           from labvol
          where labproc_recno = new.labproc_recno
            and frascos = 0
            and seringas = 0;

         -- Contando frascos e/ou seringas não embaladas
         select count(*)
           into icomps
           from labprocxequip
          where labproc_recno = new.labproc_recno
            and volume is null
           group by labproc_recno;

         -- Validando a quantidade disponível para criação de volumes
         if (icomps - ivolumes) <= 0 then
            raise '[[A remessa % já atingiu o número máximo de volumes para a quantidade de vidrarias a distribuir.]]', new.labproc_recno;
         end if;
      else
         if new.status = 1 and old.status = 1 and (new.frascos != old.frascos or new.seringas != old.seringas) then
            raise '[[O volume % da remessa % não pode ser modificado porque está fechado.]]', new.volume, new.labproc_recno;
         end if;

         -- Fechamento do volume
         if new.status = 1 and old.status <> 1 and new.frascos = 0 and new.seringas = 0 then
            raise '[[O volume %, da remessa %, não pode ser fechado porque está vazio!]]', new.volume, new.labproc_recno;
         end if;
      end if;
      
      if new.status = 1 and new.rastreio is not null then
         new.status := 2;
      end if;

      return new;
   else
      perform sys_flag_mark('labprocxequip', old.labproc_recno);
      update labprocxequip
         set volume = null
       where labproc_recno = old.labproc_recno
         and volume = old.volume;
      perform sys_flag_del('labprocxequip', old.labproc_recno);

      return old;
   end if;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;