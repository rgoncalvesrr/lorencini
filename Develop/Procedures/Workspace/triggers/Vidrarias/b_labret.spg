/**
   Valida retorno de frasco / seringa

   @author    Ricardo Gonçalves
   @date      12/01/2011 22:41:01
   @trigger   labret B IUD

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
CREATE OR REPLACE FUNCTION b_labret()
  RETURNS trigger AS
$$
Declare
   r     record;
   mdef  varchar;
BEGIN
   if tg_op <> 'DELETE' then
      -- Recupera informações do amostra
      select c.recno, c.codigo, c.estado, c.validade, cl.nome_chave,
             h.ocorrencia ret_dh
        into r
        from labamostras c
             join tbclientes cl
               on cl.codigo = c.codigo
             left join labamostras_hist h
               on h.amostra = c.recno
              and h.estado = 40
       where c.recno = new.amostra;

      -- Mensagem padrão
      mdef := 'A amostra ' || new.amostra || ' do cliente '|| r.codigo || ' - ' || r.nome_chave;

      if r.estado > 30 then
         raise '[[% já foi baixado em %.]]', mdef, to_char(r.ret_dh, 'dd/mm/yyyy hh24:mi:ss');
      end if;

      new.expirado := r.validade < current_date;

      if new.expirado then
         perform log(mdef || ' recebido com prazo de esterilização expirado.', 4);
      end if;

      -- Verifica se a amostra existe
      if not exists(
         select 1
           from labport
          where recno = new.labport_recno
            and codigo = r.codigo)
      then
         raise '[[A amostra % não existe ou não está com o cliente % - %]]',
            new.amostra, r.codigo, r.nome_chave;
      end if;
      
      if new.status < 3 then
         if new.qtd <= 0 then
            raise '[[A quantidade de fluído para amostra % deve ser maior que zero]]', 
               new.amostra;
         end if;
      else
         -- Quebrado ou vazio
         new.qtd := 0;
      end if;

      return new;
   else
      return old;
   end if;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;