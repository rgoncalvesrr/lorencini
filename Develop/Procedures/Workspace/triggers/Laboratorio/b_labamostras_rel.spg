/**
   Valida o processamento dos laudos

	@author    Ricardo Gonçalves
	@date      06/04/2011 21:56:54
	@trigger   labamostras_rel B IUD

	Histórico
	---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   3/12/2021   Ricardo Gonçalves.
      [*] Inclusão do tratamento para laudos com status "liberado"

   20/05/2016 01:21:03  Ricardo Gonçalves.
      [+] Registro da data de apontamento dos resultados dos ensaios.

   25/01/2012 14:25:02  Ricardo Gonçalves.
      [-] Os históricos de ensaios não estavam sendo gerados corretamente por conta da ordenação do conteúdo base dos
         históricos.

   08/12/2011 19:29:36  Ricardo Gonçalves.
      [*] Tratamento do retrocesso de etapa do laudo.

   04/10/2011 16:12:26  Ricardo Gonçalves.
      [+] Checagem de preenchimento das referências no encerramento do relatório.

   08/09/2011 22:44:33  Ricardo Gonçalves.
      [+] Preenchimento do código de serviços.

   15/08/2011 19:01:13  Ricardo Gonçalves.
      [+] Geração da assinatura digital.
*/
CREATE OR REPLACE FUNCTION b_labamostras_rel()
  RETURNS trigger AS
$$
Declare
   _SREL_DIGITACAO   constant integer = 0;
   _SREL_APONTAMENTO constant integer = 1;
   _SREL_REVISAO     constant integer = 2;
   _SREL_ASSINADO    constant integer = 3;
   _SREL_LIBERADO    constant integer = 4;
   _SREL_CANCELADO   constant integer = 5;

   _SPED_EXECUTANDO  constant integer = 60;
   _SPED_EXECUTADO   constant integer = 70;

   _MIN              constant integer = 1;
   _MAX              constant integer = 2;
   _MASK             constant varchar = 'FM999G999G990D9990';


   re          record;
   r           record;
   la          record; -- laudo anterior
   rh          record;
   icol        integer;

   iensaio     labamostras_res.ensaio_recno%type;
   
   -- Variáveis que guardam a assinatura digital
   vass_p1     varchar(32);
   vass_p2     varchar(32);
   vass_p3     varchar(32);
   vass_p4     varchar(32);

   mErro       text;

   xlog        log$;
   tolerancia_ qtd$;
   account_    sys_accounts.recno%type;
BEGIN
   account_ := sys_account();

   if tg_op <> 'DELETE' then
      xlog.source_table := sys_origem('labamostras_rel');
      xlog.source_recno := new.recno;
      xlog.account := sys_account();

      select equip_recno, coleta
        into r
        from labamostras
       where recno = new.amostra;

      if new.baixado then
         raise '[[O laudo % não pode sofrer alterações porque baixado pelo cliente via internet.]]', new.recno;
      end if;
      
      -- Trata inserção
      if tg_op = 'INSERT' then
         new.status := _SREL_DIGITACAO;
         new.criacao := localtimestamp;
         new.analise_automatica := false;

         -- Obtem informações do laudo
         select descri, ativo
           into rh
           from labrel
          where recno = new.relato_recno;

         if not rh.ativo then
            raise '[[O tipo de laudo % - % não está ativo. Verifique!]]', new.relato_recno, rh.descri;
         end if;

         if new.codserv is null then
            raise '[[O tipo de laudo % - % não possui serviço associado para cobrança. Verifique!]]', new.relato_recno, rh.descri;
         end if;

         -- new.codserv := rh.codserv;
      else
         -- Alteração do tipo de laudo, remove ensaios inválidos
         if new.relato_recno <> old.relato_recno then
            perform sys_flag_mark('labamostras_res', recno)
               from labamostras_res res
              where res.laudo = new.recno
                and not exists(
                    select 1
                      from labrel_ens er
                     where er.relato_recno = new.relato_recno
                       and er.ensaio_recno = res.ensaio_recno);

            delete 
              from labamostras_res
             where recno in ( 
                   select res.recno 
                     from labamostras_res res
                    where res.laudo = new.recno
                      and not exists(
                          select 1
                            from labrel_ens er
                           where er.relato_recno = new.relato_recno
                             and er.ensaio_recno = res.ensaio_recno));
         end if;

         if old.status = _SREL_DIGITACAO and new.status = _SREL_APONTAMENTO then -- Entrando em apontamento de resultados
            if not exists(
               select 1
                 from labamostras_hist
                where amostra = new.amostra
                  and estado = 50)
            then
               raise '[[O laudo % não pode receber apontamento de resultados porque a amostra % não foi revisada]]', new.recno, new.amostra;
            end if;

            return new;
         elsif old.status = _SREL_APONTAMENTO and new.status = _SREL_REVISAO then -- Entradando em revisão de resultados
            if not exists(
               select 1
                 from labamostras_res
                where laudo = new.recno
                  and relato_recno = new.relato_recno)
            then
               raise '[[O laudo não pode ser encerrado porque não há ensaios para o laudo]]';
            end if;
            
            mErro := '';

            -- Checa se a referências dos ensaios estão corretas
            for re in (
               select e.recno, e.nome
                 from labamostras_res rens
                      join labens e
                        on e.recno = rens.ensaio_recno
                       and e.reftipo <> 1
                where rens.laudo = new.recno
                 and rens.relato_recno = new.relato_recno
                 and coalesce(rens.ref_valor, 0) = 0)
            Loop
               mErro := mErro || re.recno || ' - ' || re.nome || '. ' || chr(13) || chr(10);
            End Loop;

            -- Verifica se há referências sem preenchimento
            if mErro <> '' then
               raise '[[Os ensaios abaixo estão sem referência. %]]', mErro;
            end if;

            -- Analista
            select idcodigo 
              into new.analista
              from tbfuncionarios 
             where account = account_;
            
            -- Responsável técnico
            select idcodigo 
              into new.idcodigo
              from tbfuncionarios 
             where resptec;

            new.apontado := clock_timestamp();

            -- Tenta fazer a revisão automática de resultados
            --
            -- Por padrão o campo "analise_automatica" é preenchido com falso.
            -- 
            -- Caso passe em todos os critérios a seguir é marcado como verdadeiro.            
            --
            select rel.recno, c.exige_revisao, rel.diagnostico, rel.recomendacao, rel.obs, rel.labcrit_recno, 
                   rel.labdiag_recno, rel.labrec_recno, c.label, c.descri   
              into la
              from labamostras_rel rel
                   join labamostras a
                     on a.recno = rel.amostra
                    and a.equip_recno = r.equip_recno
                   join vlaudocrit c
                     on c.relato_recno = rel.relato_recno 
                    and c.recno = rel.labcrit_recno 
             where rel.recno <> new.recno
               and rel.relato_recno = new.relato_recno
               and rel.status in (_SREL_ASSINADO, _SREL_LIBERADO)
               and rel.assinatura is not null
               and rel.emissao < clock_timestamp()
             order by rel.emissao desc
             limit 1;

            if found then
               xlog.title := format('Útimo laudo localizado %s', la.recno);
               xlog.detail := format('Informações do último laudo: Criticidade: %sDiagnóstico: %s - %sRecomendação: %s - %sObs: %s', 
                  la.labcrit_recno || chr(13)|| chr(10), la.labdiag_recno, la.diagnostico || chr(13)|| chr(10), 
                  la.labrec_recno, la.recomendacao || chr(13)|| chr(10), la.obs);

               perform log(xlog);

               if not la.exige_revisao then

                  xlog.title := format('Criticidade do último laudo localizado (%s): %s', la.recno, la.label);
                  xlog.detail := format('Criticidade detalhada: %s', la.descri);

                  perform log(xlog);

                  new.analise_automatica := true;

                  -- Recupera o valor anterior e o valor atual para cada ensaio
                  for re in (
                     select e.nome, atual.ensaio_recno, atual.valor valor_atual, hist.valor valor_historico, e.tolerancia,
                            e.reftipo, atual.ref_tipo, atual.ref_valor
                       from labamostras_res atual
                            left join labamostras_res hist
                              on hist.laudo = la.recno
                             and hist.relato_recno = atual.relato_recno 
                             and hist.ensaio_recno = atual.ensaio_recno 
                            join labens e
                              on e.recno = atual.ensaio_recno 
                      where atual.laudo = new.recno)
                  loop
                     -- Validação do resultado por valores de referência 
                     if re.reftipo > 1 then
                        if re.ref_tipo = _MIN and re.valor_atual < re.ref_valor then
                           new.analise_automatica := false;

                           xlog.detail := format('Resultado do ensaio %s é inferior ao valor de referência %s', 
                              to_char(re.valor_atual, _MASK),                               
                              to_char(re.ref_valor, _MASK));
                        end if;

                        if re.ref_tipo = _MAX and re.valor_atual > re.ref_valor then
                           new.analise_automatica := false;

                           xlog.detail := format('Resultado do ensaio %s excedeu o valor de referência %s', 
                              to_char(re.valor_atual, _MASK),
                              to_char(re.ref_valor, _MASK));
                        end if;
                     else
                        -- Validação do resultado por comparação com resultado anterior
                        tolerancia_ := 0;
                        -- Calcula tolerância com base no resultado anterior
                        if re.tolerancia > 0 and re.valor_historico > 0 then
                           tolerancia_ := re.valor_historico + re.valor_historico * re.tolerancia / 100;                     
                        end if;
                        
                        if re.valor_atual not between (re.valor_historico - tolerancia_) and (re.valor_historico + tolerancia_) then                     
                           new.analise_automatica := false;

                           xlog.detail := format('Resultado do ensaio %s. Tolerância(%s) de %s até %s', 
                              to_char(re.valor_atual, _MASK), 
                              to_char(re.tolerancia, 'FM990D90%'),
                              to_char(re.valor_historico - tolerancia_, _MASK),
                              to_char(re.valor_historico + tolerancia_, _MASK));
                        end if;
                     end if;
                     
                     if not new.analise_automatica then                     
                        xlog.title := format('Ensaio %s - %s fora da tolerância', re.ensaio_recno, re.nome);
                        perform log(xlog);
                        exit;
                     end if;
                  end loop;

                  -- Recupera informações de diagnóstico e recomendação do laudo anterior
                  if new.analise_automatica then                     
                     xlog.title := format('Laudo %s qualificado por análise automática.', new.recno);
                     xlog.detail := format('Todos os ensaios passaram nos critérios de tolerância.'); 
                     perform log(xlog);

                     new.labcrit_recno := la.labcrit_recno;
                     new.labdiag_recno := la.labdiag_recno; 
                     new.labrec_recno  := la.labrec_recno;   
                     new.diagnostico := la.diagnostico; 
                     new.recomendacao := la.recomendacao;                     
                     new.obs := la.obs;

                     select dias + r.coleta
                       into new.pcoleta
                       from vlaudodiags 
                      where relato_recno = new.labdiag_recno
                        and recno = new.relato_recno;
                  end if;
               end if;
            else
               xlog.title := 'Análise automática: laudo anterior não localizado';
               xlog.detail := 'Não foi possível localizar laudo anterior para determinar análise automática';
               perform log(xlog);
            end if;
         elsif old.status = _SREL_REVISAO and new.status = _SREL_ASSINADO then -- Assinatura do Laudo
            -- Verifica o codigo
            if new.idcodigo is null then
               raise '[[Para assinar um laudo é necessário que o código do engenheiro seja informado.]]';
            end if;

            if new.analista is null then
               raise '[[Para assinar um laudo é necessário que o código do analista seja informado.]]';
            end if;

            new.emissao := localtimestamp;            
            iensaio := -1;

            -- Gera histórico para amostra atual
            for rh in (
               select e.relato_recno, e.ensaio_recno, rel.emissao, e.valor, rel.recno
                 from labamostras_rel rel
                      join labamostras a
                        on a.recno = rel.amostra
                       and a.equip_recno = r.equip_recno
                      join labamostras_res e
                        on e.laudo = rel.recno
                       and e.relato_recno = rel.relato_recno
                where rel.recno <> new.recno
                  and rel.relato_recno = new.relato_recno
                  and rel.status in (_SREL_ASSINADO, _SREL_LIBERADO)
                  and rel.assinatura is not null
                  and rel.emissao < new.emissao
                  and rel.revisao is null
                order by e.ensaio_recno, rel.emissao desc)
            Loop
               -- Insere na lista de histórico da amostra
               insert into labamostras_hres (relato_recno, ensaio_recno, laudo, laudo_dep)
                    values                  (rh.relato_recno, rh.ensaio_recno, new.recno, rh.recno);

               if rh.ensaio_recno <> iensaio then
                  iensaio := rh.ensaio_recno;
                  icol := 1;
               end if;

               if icol = 1 then
                  new.d1 := rh.emissao;
                  update labamostras_res
                     set v1 = rh.valor
                   where laudo = new.recno
                     and relato_recno = new.relato_recno
                     and ensaio_recno = rh.ensaio_recno;
               elsif icol = 2 then
                  new.d2 := rh.emissao;
                  update labamostras_res
                     set v2 = rh.valor
                   where laudo = new.recno
                     and relato_recno = new.relato_recno
                     and ensaio_recno = rh.ensaio_recno;
               elsif icol = 3 then
                  new.d3 := rh.emissao;
                  update labamostras_res
                     set v3 = rh.valor
                   where laudo = new.recno
                     and relato_recno = new.relato_recno
                     and ensaio_recno = rh.ensaio_recno;
               elsif icol = 4 then
                  new.d4 := rh.emissao;
                  update labamostras_res
                     set v4 = rh.valor
                   where laudo = new.recno
                     and relato_recno = new.relato_recno
                     and ensaio_recno = rh.ensaio_recno;
               elsif icol = 5 then
                  new.d5 := rh.emissao;
                  update labamostras_res
                     set v5 = rh.valor
                   where laudo = new.recno
                     and relato_recno = new.relato_recno
                     and ensaio_recno = rh.ensaio_recno;
               elsif icol = 6 then
                  new.d6 := rh.emissao;
                  update labamostras_res
                     set v6 = rh.valor
                   where laudo = new.recno
                     and relato_recno = new.relato_recno
                     and ensaio_recno = rh.ensaio_recno;
               end if;

               icol := icol + 1;
            End Loop;

            vass_p1 := md5(trim(to_char(new.idcodigo, '000')));
            vass_p2 := md5(to_char(new.emissao, 'DDMMYYYYHH24MISS'));
            vass_p3 := md5(to_char(new.criacao, 'DDMMYYYYHH24MISS'));
            vass_p4 := md5(new.diagnostico);

            new.assinatura := vass_p1 || vass_p2 || vass_p3 || vass_p4;

            -- Verifica se o laudo está liberado
            new.pendencia := liberar_laudo(new.recno);
            
            if new.pendencia = '' then
               new.status := _SREL_LIBERADO;
               new.pendencia := null;
            end if;
         elsif new.status = _SREL_LIBERADO and old.status = _SREL_ASSINADO then
            if not laudo_liberado(new.recno) then
               new.pendencia := liberar_laudo(new.recno);
               if new.pendencia <> '' then
                  new.status := old.status;
               else
                  new.pendencia := null;   
               end if;
            else
               new.pendencia := null;
            end if;
         elsif old.status = _SREL_CANCELADO then
            raise '[[O laudo % não pode sofrer alterações porque está cancelado.]]', new.recno;
         elsif (new.status < old.status) then                     
            -- Gerando revisão do laudo
            if old.status in (_SREL_ASSINADO, _SREL_LIBERADO) then
               insert into labamostras_rel 
                  (amostra, relato_recno, codserv, pedido, os)
               values
                  (old.amostra, old.relato_recno, old.codserv, old.pedido, old.os)
               returning recno into new.revisao;

               update labamostras_res d
                  set valord = o.valord, labinst_recno = o.labinst_recno, labinstcert_recno = o.labinstcert_recno, 
                      ref_tipo = o.ref_tipo, ref_valor = o.ref_valor, proc = o.proc
                 from labamostras_res o
                where o.relato_recno = d.relato_recno
                  and o.ensaio_recno = d.ensaio_recno
                  and o.laudo = old.recno
                  and d.laudo = new.revisao;

               -- Laudo cancelado
               new.status := _SREL_CANCELADO;
            end if;

            if old.status = _SREL_REVISAO then
               new.apontado := null;
            end if;
         else            
            if old.status <> new.status and not sys_flag('labamostras_rel', new.recno) then
               raise '[[As alterações do laudo % devem respeitar as etapas.]]', new.recno;
            end if;
         end if;
      end if;

      return new;
   else
      perform sys_flag_mark('labamostras_rel', old.recno);

      return old;
   end if;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;