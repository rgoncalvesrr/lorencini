-----------------------------------------------------------------------------------------------------------------------
--- Preparação
-----------------------------------------------------------------------------------------------------------------------
select setval('sys_tables_recno_seq', max(recno))
  from sys_tables;

-----------------------------------------------------------------------------------------------------------------------
--- Atualização Financeira
-----------------------------------------------------------------------------------------------------------------------
create table sys_http_status_codes (
	code integer not null,
	label descri$ not null,
	recno bigserial not null,
	constraint pk_sys_http_status_codes primary key(code),
	constraint uk_sys_http_status_codes_1 unique(label),
	constraint uk_sys_http_status_codes_2 unique(recno));

alter table sys_http_status_codes owner to lorencini;

insert into sys_http_status_codes
	(code, label)
values
	('100', 'Continue'),
	('101', 'Switching Protocols'),
	('103', 'Early Hints'),
	('200', 'OK'),
	('201', 'Created'),
	('202', 'Accepted'),
	('203', 'Non-Authoritative Information'),
	('204', 'No Content'),
	('205', 'Reset Content'),
	('206', 'Partial Content'),
	('300', 'Multiple Choices'),
	('301', 'Moved Permanently'),
	('302', 'Found'),
	('303', 'See Other'),
	('304', 'Not Modified'),
	('307', 'Temporary Redirect'),
	('308', 'Permanent Redirect'),
	('400', 'Bad Request'),
	('401', 'Unauthorized'),
	('402', 'Payment Required'),
	('403', 'Forbidden'),
	('404', 'Not Found'),
	('405', 'Method Not Allowed'),
	('406', 'Not Acceptable'),
	('407', 'Proxy Authentication Required'),
	('408', 'Request Timeout'),
	('409', 'Conflict'),
	('410', 'Gone'),
	('411', 'Length Required'),
	('412', 'Precondition Failed'),
	('413', 'Payload Too Large'),
	('414', 'URI Too Long'),
	('415', 'Unsupported Media Type'),
	('416', 'Range Not Satisfiable'),
	('417', 'Expectation Failed'),
	('418', 'I''m a teapot'),
	('422', 'Unprocessable Entity'),
	('425', 'Too Early'),
	('426', 'Upgrade Required'),
	('428', 'Precondition Required'),
	('429', 'Too Many Requests'),
	('431', 'Request Header Fields Too Large'),
	('451', 'Unavailable For Legal Reasons'),
	('500', 'Internal Server Error'),
	('501', 'Not Implemented'),
	('502', 'Bad Gateway'),
	('503', 'Service Unavailable'),
	('504', 'Gateway Timeout'),
	('505', 'HTTP Version Not Supported'),
	('506', 'Variant Also Negotiates'),
	('507', 'Insufficient Storage'),
	('508', 'Loop Detected'),
	('510', 'Not Extended'),
	('511', 'Network Authentication Required');

create schema if not exists tspeed;

alter schema tspeed owner to lorencini;

create type tspeed.classes$ AS ENUM (
	'PF',
	'PJ');

alter type tspeed.classes$ owner to lorencini;

create table tspeed.tipos(
	tipo integer not null,
	nome descri$ not null,
	classe tspeed.classes$ not null,
	custo moeda$ not null,
	recno serial not null,
	constraint pk_tipos primary key(recno),
	constraint uk_tipo_1 unique(nome),
	constraint ck_tipo_1 check(custo > 0));

alter table tspeed.tipos owner to lorencini;

insert into tspeed.tipos
	(tipo, nome, classe, custo)
values
	(1, 'Crednet PF TOP', 'PF', 8.34),
	(2, 'Credit Bureau PF Top Score', 'PF', 33.47),
	(3, 'Concentre PF Top Score', 'PF', 27.47),
	(4, 'Crednet Light+ Protesto Estadual', 'PF', 4.40),
	(1, 'Crednet PJ TOP', 'PJ', 9.27),
	(2, 'Relato Top Score', 'PJ', 33.71),
	(3, 'Concentre PJ Top Score', 'PJ', 30.41),
	(4, 'Crednet Light + Protesto Estadual', 'PJ', 4.9);

select sys_param_w('scc_login', encode('3492419', 'base64')), sys_param_w('scc_pass', encode('83@881t5', 'base64')),
       sys_param_w('tecno_token', encode('09c0032a83124dd0dd887194e3f93d0f', 'base64'));

alter type svc_status$ add value 'preparing' before 'queue';

create type environment$ AS ENUM (
	'dev',
	'prod');

alter type environment$ owner to lorencini;

create type http_method$ AS ENUM (
   'GET',
   'HEAD',
   'POST',
   'PUT',
   'DELETE',
   'OPTIONS',
   'PATCH');

alter type http_method$ owner to lorencini;

create table public.svc_cliapi (
	recno bigserial not null,
	uri text not null,
	account account$ not null,
	created_at timestamp default(clock_timestamp()) not null,
   req_method http_method$ default('GET') not null,
   req_body jsonb,
   req_headers jsonb,
   res_body jsonb,
   res_body_raw text,
   res_headers jsonb,
   res_code integer,
   res_callback varchar(100),
   scheduled timestamp default(clock_timestamp()) not null,
   status svc_status$ default('preparing') not null,
   id varchar(38),
   env environment$ default('dev') not null,
   constraint pk_svc_cliapi primary key(recno),
   constraint fk_svc_cliapi_1 foreign key(account)
      references public.sys_accounts(recno)
      on update cascade on delete restrict,
   constraint fk_svc_cliapi_2 foreign key(res_code)
      references public.sys_http_status_codes(code)
      on update cascade on delete restrict,
   constraint fk_svc_cliapi_3 foreign key(res_callback)
      references public.sys_fn(fn)
      on update cascade on delete restrict
);

alter table svc_cliapi owner to lorencini;

alter table sys_fn add schema_ varchar(40) default('public') not null;

alter table sys_tables
	add schema_ varchar(40) default('public') not null;

create table tspeed.cred_situacoes (
   recno bigserial not null,
   classe tspeed.classes$ not null,
   situacao integer not null,
   descri descri$ not null,
   regular boolean default(false) not null,
   constraint pk_cred_situacoes primary key(recno),
   constraint uk_cred_situacoes_1 unique(classe, situacao)
);

alter table tspeed.cred_situacoes owner to lorencini;

insert into tspeed.cred_situacoes
	(classe, situacao, descri, regular)
values
	('PJ', 2, 'REGULAR', true),
	('PJ', 3, 'PENDENTE DE REGULARIZAÇÃO', false),
	('PJ', 6, 'SUSPENSA', false),
	('PJ', 7, 'TITULAR FALECIDO', false),
	('PJ', 9, 'CANCELADA', false),
	('PJ', 4, 'NULA', false),
	('PF', 2, 'ATIVA', true),
	('PF', 6, 'SUSPENSA', false),
	('PF', 0, 'INAPTA', false),
	('PF', 7, 'BAIXADA', false),
	('PF', 4, 'NULA', false);

create type tspeed.cred_consultas_status$ AS ENUM (
	'aguardando',
	'sempendencias',
	'compendencias');

alter type tspeed.cred_consultas_status$ owner to lorencini;


create table tspeed.cred_motivos(
   motivo integer not null,
   descri descri$ not null,
   recno bigserial not null,
   constraint pk_cred_motivos primary key(motivo),
   constraint uk_cred_motivos_1 unique(descri),
   constraint uk_cred_motivos_2 unique(recno));

alter table tspeed.cred_motivos owner to lorencini;

insert into tspeed.cred_motivos
	(motivo, descri)
values
	(10, 'Consulta avulsa'),
	(20, 'Primeiro pedido'),
	(30, 'Pedido anterior com restrição'),
	(40, 'Cliente com restrição interna');

create table tspeed.cred_consultas(
   recno bigserial not null,
   account account$ not null,
   emissao timestamp default(clock_timestamp()) not null,
   nome varchar(200),
   registro date,
   situacao bigint,
   tipo integer not null,
   cliente integer,
   documento varchar(14) not null,
   uf varchar(2) not null,
   env environment$ default('dev') not null,
   custo moeda$ not null,
   status tspeed.cred_consultas_status$ default('aguardando') not null,
   motivo integer default(10) not null,
   source_table integer not null,
   source_recno bigint,
   constraint pk_cred_consultas primary key(recno),
   constraint fk_cred_consultas_1 foreign key(account)
      references sys_accounts(recno) on update cascade on delete cascade,
   constraint fk_cred_consultas_2 foreign key(situacao)
      references tspeed.cred_situacoes(recno) on update cascade on delete restrict,
   constraint fk_cred_consultas_3 foreign key(tipo)
      references tspeed.tipos(recno) on update cascade on delete restrict,
   constraint fk_cred_consultas_4 foreign key(cliente)
      references public.tbclientes(codigo) on update cascade on delete cascade,
   constraint fk_cred_consultas_5 foreign key(uf)
      references public.estados(uf) on update cascade on delete restrict,
   constraint fk_cred_consultas_6 foreign key(motivo)
      references tspeed.cred_motivos(motivo) on update cascade on delete restrict,
   constraint fk_cred_consultas_7 foreign key(source_table)
      references public.sys_tables(recno) on update cascade on delete restrict);

alter table tspeed.cred_consultas owner to lorencini;

create table tspeed.cred_tipos(
   tipo integer not null,
   descri descri$ not null,
   recno bigserial not null,
   constraint pk_cred_tipos primary key(tipo),
   constraint uk_cred_tipos_1 unique(descri),
   constraint uk_cred_tipos_2 unique(recno)
);

alter table tspeed.cred_tipos owner to lorencini;

insert into tspeed.cred_tipos
	(tipo, descri)
values
	(1, 'Cheques Sem Fundos'),
	(2, 'Pefin - Débitos com empresas/pessoas'),
	(3, 'Refin - Débitos com bancos/instituições financeiras'),
	(4, 'Dívidas vencidas'),
	(5, 'Protestos'),
	(6, 'Pendências internas');

create table tspeed.cred_resumos(
   consulta bigint not null,
   tipo integer not null,
   qtd integer default(0) not null,
   total moeda$ not null,
   ocorrencia_antiga varchar(7),
   ocorrencia_recente varchar(7),
   recno bigserial not null,
   constraint pk_cred_resumos primary key(consulta, tipo),
   constraint fk_cred_resumos_1 foreign key(consulta)
      references tspeed.cred_consultas(recno) on update cascade on delete cascade,
   constraint fk_cred_resumos_2 foreign key(tipo)
      references tspeed.cred_tipos(tipo) on update cascade on delete restrict,
   constraint uk_cred_resumos_1 unique(recno)
);

alter table tspeed.cred_resumos owner to lorencini;

create table tspeed.cred_cliapi (
   consulta bigint not null,
   request bigint not null,
   registro timestamp default(clock_timestamp()) not null,
   recno bigserial not null,
   constraint pk_cred_cliapi primary key(consulta, request),
   constraint fk_cred_cliapi_1 foreign key(consulta)
      references tspeed.cred_consultas(recno) on update cascade on delete cascade,
   constraint fk_cred_cliapi_2 foreign key(request)
      references public.svc_cliapi(recno) on update cascade on delete restrict,
   constraint uk_cred_cliapi_1 unique(recno)
);

alter table tspeed.cred_cliapi owner to lorencini;

create table public.cred_analise(
   recno bigserial not null,
   status integer default(0) not null,
   cliente integer not null,
   serasa bigint,
   emissao timestamp default(clock_timestamp()) not null,
   valor moeda$,
   analisado_em timestamp,
   solicitante bigint not null,
   analista bigint,
   obs text,
   source_table integer not null,
   source_recno bigint,
   titulos bigint default(0) not null,
   titulos_quitados_atraso bigint default(0) not null,
   titulos_em_atraso bigint default(0) not null,
   titulos_a_receber bigint default(0) not null,
   ptitulos_atrasados percent$ not null,
   total moeda$ not null,
   recebido moeda$ not null,
   receber moeda$ not null,
   atrasado moeda$ not null,
   pri_compra date,
   ult_compra date,
   menor_compra moeda$ not null,
   maior_compra moeda$ not null,
   maior_atraso integer default(0) not null,
   constraint pk_cred_analise primary key(recno),
   constraint fk_cred_analise_1 foreign key(source_table)
      references public.sys_tables(recno) on update cascade on delete restrict,
   constraint fk_cred_analise_2 foreign key(cliente)
      references public.tbclientes(codigo) on update cascade on delete cascade,
   constraint fk_cred_analise_3 foreign key(serasa)
      references tspeed.cred_consultas(recno) on update cascade on delete restrict,
   constraint fk_cred_analise_4 foreign key(solicitante)
      references public.sys_accounts(recno) on update cascade on delete restrict,
   constraint fk_cred_analise_5 foreign key(analista)
      references public.sys_accounts(recno) on update cascade on delete restrict,   
   constraint ck_cred_analise check(valor > 0));

alter table public.cred_analise owner to lorencini;

alter table public.pedido
	add analise bigint,
	add constraint fk_pedido_3 foreign key(analise)
		references public.cred_analise(recno) on update cascade on delete restrict;

--- Aplicar visão vposição financeira !!!!!!!!!!!!!!!!!!!!!

-----------------------------------------------------------------------------------------------------------------------
--- Atualização API
---
--- criar visão api.json_results
-----------------------------------------------------------------------------------------------------------------------

create table api.json_reports (
	laudo integer not null,
	content jsonb not null,
	recno bigserial not null,
	constraint pk_json_reports primary key(laudo),
	constraint fk_json_reports_1 foreign key(laudo)
		references public.labamostras_rel(recno)
		on update cascade on delete cascade,
	constraint uk_json_reports_1 unique(recno)
);

create index idx_json_reports_1 on api.json_reports using gin(content);

alter table api.json_reports owner to lorencini;

do $$
begin
   perform api.json_laudo(recno, true)
      from labamostras_rel
     where status = 4;
end;$$

do $$
begin
   perform api.json_laudo(recno, true)
      from labamostras_rel
     where status = 5;
end;$$

alter table pedido_serv
	add saldo integer default(0) not null,
	add constraint ck_pedido_serv_6 check(saldo between 0 and qtd);

alter table pedido_mo
	add saldo integer default(0) not null,
	add constraint ck_pedido_mo_17 check(saldo between 0 and qtd);

alter table pedido_mat
	add saldo qtd$ default(0) not null,
	add constraint ck_pedido_mat_4 check(saldo between 0 and qtd);

select sys_login('informatica@lorencini.com.br', 'a4406a88a03a0eae5a7b10000beab648');

update labamostras set estado = 70  where estado = 50 and equip_recno is null;

alter table labamostras
	add constraint ck_labamostras_6 check((estado <> 50) or (estado = 50 and equip_recno is not null));

insert into sys_errors
	(constraint_, descri, solucao)
values
	('ck_labamostras_6', 'Para que a amostra fique disponível é necessário fazer sua revisão', 'Preencha os dados do equipamento e dados da coleta'),
	('fk_labamostras_rel_9', 'Amostra não consta na ordem de produção', null);

create table labtipo_recipiente (
	recno bigserial not null,
	descri descri$ not null,
	constraint pk_labtipo_recipiente primary key(recno),
	constraint uk_labtipo_recipiente_1 unique(descri)
);

alter table labtipo_recipiente owner to lorencini;

insert into labtipo_recipiente
	(recno, descri)
values
	(1, 'Frasco'),
	(2, 'Seringa');

alter sequence labtipo_recipiente_recno_seq restart with 3;

alter table labprocxequip
	add constraint fk_labprocxequip_2 foreign key(tipo)
		references labtipo_recipiente(recno)
		on update cascade on delete restrict;

alter table servicos
	alter vidraria drop not null;

update servicos
   set vidraria = null
 where vidraria = 0;

alter table servicos
	add constraint fk_servicos_1 foreign key(vidraria)
		references labtipo_recipiente(recno)
		on update cascade on delete restrict;

alter table labamostras
	add recipiente integer,
	add constraint fk_labamostras_5 foreign key(recipiente)
		references labtipo_recipiente(recno)
		on update cascade on delete restrict;

alter table labamostras disable trigger all;
update labamostras a
   set recipiente = le.tipo
  from labprocxequip le
 where le.amostra = a.recno;
alter table labamostras enable trigger all;

alter table tb_orcamentos
	alter os set default( nextval(('tb_orcamentos_os_seq'::text)::regclass));

select setval('tb_orcamentos_os_seq', max(os)+1) from tb_orcamentos;

update labamostras_status set descri = 'Expedida' where status = 20;
update labamostras_status set descri = 'Coletando' where status = 30;
update labamostras_status set descri = 'Disponível' where status = 50;
update labamostras_status set descri = 'Consumida' where status = 60;