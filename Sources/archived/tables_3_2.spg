/**
   Script da versão 3.2

   @author    Ricardo Gonçalves
   @date      17/03/2011 10:09:58
   @trigger

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso
*/
set session authorization lorencini;

alter table labamostras alter equip_recno drop not null;
ALTER TABLE labamostras ALTER COLUMN tpamostra_recno DROP NOT NULL;
ALTER TABLE labamostras ALTER COLUMN coleta DROP NOT NULL;

alter table labamostras drop classe;
alter table labamostras add labsubest_recno integer;
alter table labamostras add tag varchar(50);
alter table labamostras add local varchar(50);
alter table labamostras add codigo_final integer not null;

alter table labamostras add constraint fk_labamostras_codigo_final
    foreign key(codigo_final) references tbclientes(codigo)
    on update cascade;

alter table labamostras add constraint fk_labamostras_labsubest_recno
    foreign key(labsubest_recno) references labsubest(recno)
    on update cascade;

insert into sys_errors (constraint_, descri, solucao) values ('fk_labamostras_labsubest_recno', 'Subestação não pode ser excluída porque é referenciada por amostras.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_labamostras_codigo_final', 'Cliente não pode ser excluído porque é referenciado por amostras.', '');

alter table labequipxcli add local varchar(50);
alter table labens add obs varchar(120);

update labrel set ativo = false;

CREATE OR REPLACE VIEW vequip AS
 SELECT e.recno, ((e.fabricante || ' - '::text) || fa.nome::text)::character varying AS fabricante,
        e.serie, ((((e.tipo || ' - '::text) || t.sigla::text) || ' '::text) || t.descri::text)::character varying AS tipo,
        e.descri, e.potencia, e.potencia_a, e.potencia_b, e.fases, e.lote, e.imped, e.imped_a, e.imped_b,
        e.tensao, e.tensao_a, e.tensao_b, e.corr, e.corr_a, e.corr_b,
        e.ano, ((e.isolante || ' - '::text) || i.nome::text)::character varying AS isolante, e.volume, e.drenos,
        cast(e.familia || ' - ' || f.descri as varchar) as familia
   FROM labequip e
        JOIN labequip_tipo t
          ON t.tipo = e.tipo
        LEFT JOIN labfabri fa
          ON fa.recno = e.fabricante
        LEFT JOIN labisolante i
          ON i.recno = e.isolante
        LEFT JOIN labfamilia f
          on f.recno = e.familia;

create or replace view vtplaudo as
   select r.recno, r.descri, r.codserv, s.descri as servico, r.ativo,
          s.un, s.valor, s.grupo, g.descri as grupo_nome
     from labrel r
          join servicos s
            on s.codserv = r.codserv
          left join servicos_grupo g
            on g.recno = s.grupo;

create table labtipotensao (
   classe varchar(1) not null,
   tipo integer not null,
   recno serial not null);

alter table labtipotensao add constraint pk_labtipotensao primary key(classe, tipo);
alter table labtipotensao add constraint fk_labtipotensao_classe
   foreign key(classe) references labtensao(classe)
   on update cascade on delete cascade;
alter table labtipotensao add constraint fk_labtipotensao_tipo
   foreign key(tipo) references labequip_tipo(tipo)
   on update cascade;
alter table labtipotensao add constraint uk_labtipotensao_recno
   unique (recno);

insert into sys_errors (constraint_, descri, solucao) values ('pk_labtipotensao', 'Tipo de equipamento já cadastrado para classe informada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_labtipotensao_classe', 'Classe de tensão não localizada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_labtipotensao_tipo', 'Tipo de equipamento não localizado.', '');

alter table labrefs add tipo integer;
alter table labrefs add constraint ck_labrefs_tipo check(tipo in (1,2));

insert into sys_errors (constraint_, descri, solucao) values ('ck_labrefs_tipo', 'Tipo de referência deve ser 1-Mínimo ou 2-Máximo.', '');

update labrefs set tipo = 1;

alter table labamostras
   add revisor varchar(20);

alter table labamostras add constraint fk_labamostras_revisor
   foreign key(revisor) references sys_users(username)
   on update cascade;

insert into sys_errors (constraint_, descri, solucao) values ('fk_labamostras_revisor', 'Usuário não pode ser excluído porque é revisor de amostras.', '');

alter table labamostras_rel
   add tecnico varchar(20);

alter table labamostras_rel add constraint fk_labamostras_rel_tecnico
   foreign key(tecnico) references sys_users(username)
   on update cascade;

insert into sys_errors (constraint_, descri, solucao) values ('fk_labamostras_rel_tecnico', 'Usuário não pode ser excluído porque é técnido de laudos.', '');

alter table sys_log add nivel integer default 3 not null;


create table labcalc(
   proc varchar(100) not null,
   descri varchar(60) not null,
   recno serial not null);

alter table labcalc add constraint pk_labcalc primary key(proc);
alter table labcalc add constraint uk_labcalc_descri unique (descri);
alter table labcalc add constraint uk_labcalc_recno unique (recno);

create table labcalcvar(
   proc varchar(100) not null,
   param varchar(15) not null,
   titulo varchar(60) not null,
   int_ integer default 12 not null,
   dec_ integer default 4 not null,
   ensaio_recno integer,
   recno serial not null);

alter table labcalcvar add constraint pk_labcalcvar primary key(proc, param);
alter table labcalcvar add constraint fk_labcalcvar_proc
   foreign key(proc) references labcalc(proc)
   on update cascade on delete cascade;
alter table labcalcvar add constraint fk_labcalc_ensaio_recno
   foreign key(ensaio_recno) references labens(recno)
   on update cascade on delete set null;
alter table labcalcvar add constraint uk_labcalcvar_titulo unique (titulo);
alter table labcalcvar add constraint uk_labcalcvar_recno unique (recno);

insert into sys_errors (constraint_, descri, solucao) values ('pk_labcalcvar', 'Parâmetro do cálculo já cadastrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_labcalcvar_proc', 'Parâmetro deve estar associado a um cálculo.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_labcalcvar_titulo', 'Título do parâmetro já cadastrado.', '');

insert into sys_errors (constraint_, descri, solucao) values ('pk_labcalc', 'Cálculo já cadastrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_labcalc_descri', 'Descrição do cálculo já cadastrada.', '');

alter table labens add proc varchar(100);
alter table labens add constraint fk_labens_proc
   foreign key(proc) references labcalc(proc)
   on update cascade;

create table labamostras_res_var (
   relato_recno integer not null,
   ensaio_recno integer not null,
   amostra_recno integer not null,
   proc varchar(100) not null,
   param varchar(15) not null,
   valor float default 0 not null,
   recno serial not null);

alter table labamostras_res_var add constraint pk_labamostras_res_var
   primary key(relato_recno, ensaio_recno, amostra_recno, proc, param);

alter table labamostras_res_var add constraint fk_labamostras_res_var_ens
   foreign key(relato_recno, ensaio_recno, amostra_recno)
   references labamostras_res(relato_recno, ensaio_recno, amostra_recno)
   on update cascade on delete cascade;

alter table labamostras_res_var add constraint fk_labamostras_res_var_proc
   foreign key(proc, param)
   references labcalcvar(proc, param)
   on update cascade;
   
alter table labamostras_res 
   add proc varchar(100),
   add username varchar(50),
   add registro timestamp;

alter table labamostras_res add constraint fk_labamostras_res_proc
   foreign key(proc) references labcalc(proc)
   on update cascade;

alter table labamostras_res add
   constraint fk_labamostras_res foreign key(username)
   references sys_users(username) on update cascade;

create table labacidez (
   recno serial not null,
   username varchar(20) not null,
   vigencia date not null,
   biftalato_a numeric(18, 4) default 0 not null,
   biftalato_b numeric(18, 4) default 0 not null,
   volume_a numeric(18, 4) default 0 not null,
   volume_b numeric(18, 4) default 0 not null,
   agua numeric(18, 4) default 0 not null,
   con_a numeric(18, 6) default 0 not null,
   con_b numeric(18, 6) default 0 not null,
   media numeric(18, 6) default 0 not null);

alter table labacidez add constraint pk_labacidez primary key(recno);
alter table labacidez add constraint fk_labacidez_username
   foreign key(username) references sys_users(username)
   on update cascade;
   
insert into labcalc (proc, descri) values ('labcalc_teoragua','Cálculo do teor de água');
insert into labcalc (proc, descri) values ('labcalc_tensaoi','Cálculo da Tensão Interfacial');
insert into labcalc (proc, descri) values ('labcalc_acidez','Cálculo do Índice de Neutralização (acidez)');

insert into labcalcvar (proc,param,titulo,int_,dec_,ensaio_recno) values ('labcalc_tensaoi','densidade','Densidade',18,4,19);
insert into labcalcvar (proc,param,titulo,int_,dec_,ensaio_recno) values ('labcalc_acidez','peso','Peso da Amostra',18,3, null);
insert into labcalcvar (proc,param,titulo,int_,dec_,ensaio_recno) values ('labcalc_acidez','volume','Volume Gasto',18,2), null;
insert into labcalcvar (proc,param,titulo,int_,dec_,ensaio_recno) values ('labcalc_acidez','valor_branco','Valor do Branco',18,2, null);

update labens set proc = 'labcalc_teoragua' where recno = 24;
update labens set proc = 'labcalc_tensaoi' where recno = 23;
update labens set proc = 'labcalc_acidez' where recno = 21;

