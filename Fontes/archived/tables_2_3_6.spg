/**
   Atualização dos scritps para versão 2.3.6

   Autor	   Ricardo Gonçalves
   Data     19/01/2009 19:00:50

	Histórico
	------------------------------------------------------------------
*/

delete from fornecedores where empresa is null;
alter table fornecedores 
   drop codigo cascade,
   add codigo serial not null,
   alter empresa set not null;
alter table fornecedores rename restricao to rest;
alter table fornecedores add restricao boolean default false not null;
update fornecedores set restricao = coalesce((upper(rest) = 'SIM'), false);
alter table fornecedores drop rest;
update fornecedores set cep = null where trim(cep) = '-';
update fornecedores set cep = replace(cep, '-', '');
alter table fornecedores alter cep type varchar(08);
update fornecedores set cnpj = replace(replace(replace(cnpj, '.', ''), '/', ''), '-', '');
alter table fornecedores alter cnpj type varchar(14);
alter table fornecedores add constraint pk_fornecedores primary key(codigo);
alter table fornecedores
  drop ramoativ cascade,
  drop fat_ende cascade,
  drop fat_bair cascade,
  drop fat_cep cascade,
  drop fat_cida cascade,
  drop fat_esta cascade,
  drop ent_ende cascade,
  drop ent_bair cascade,
  drop ent_cep cascade,
  drop ent_cida cascade,
  drop ent_esta cascade;

delete
  from fornecedores_produtos
 where id_fornecedor not in (select codigo from fornecedores);
delete
  from fornecedores_produtos
 where id_produto not in (select codigo from produtos);
alter table fornecedores_produtos
   drop id_grupo cascade,
   add constraint fk_fornecedores_produtos_fornecedor foreign key (id_fornecedor)
	  references fornecedores(codigo) on update cascade on delete cascade,
   add constraint fk_fornecedores_produtos_produto foreign key (id_produto)
	  references produtos(codigo) on update cascade on delete cascade;

insert into sys_errors (constraint_, descri, solucao) values ('fk_fornecedores_produtos_fornecedor', 'Fornecedor informado não cadastrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fornecedores_produtos_produto', 'Produto informado não cadastrado.', '');

drop table pagamentos cascade;
drop table pagamentos_baixados cascade;
drop table pagamentos_baixados_titulos cascade;
drop table pagamentos_vencimentos cascade;
drop table plano_contas_contas cascade;
DROP TABLE plano_contas_grupo cascade;
DROP TABLE plano_contas_sub_grupo cascade;
DROP TABLE fluxo_caixa cascade;
DROP TABLE nota_fiscal cascade;
DROP TABLE nota_fiscal_produtos cascade;
DROP TABLE nota_fiscal_servicos cascade;
DROP TABLE nota_fiscal_vencimentos cascade;
DROP TABLE nota_produtos_temporario cascade;
DROP TABLE nota_servicos_temporario cascade;
DROP TABLE nota_vencimentos_temporario cascade;
DROP TABLE report_balanco_financeiro cascade;
DROP TABLE report_fluxo_caixa cascade;
DROP TABLE retorno_mao_obra cascade;
DROP TABLE retorno_materiais cascade;
DROP TABLE retorno_materiais_incluidos cascade;
DROP TABLE rpt_comissao_vendedores cascade;
DROP TABLE rpt_entrada_amostra_analitico cascade;
DROP TABLE rpt_faturamento_servicos cascade;
DROP TABLE rpt_os cascade;
DROP TABLE rptapontamentofolha cascade;
DROP TABLE tb_compra_cotacao cascade;
DROP TABLE tb_compra_cotacao_fornecedores cascade;
DROP TABLE tb_compra_cotacao_produtos cascade;
DROP TABLE tbusuarios cascade;
DROP TABLE tbmenupersonalizado cascade;
DROP TABLE tbmenugeral cascade;
DROP TABLE produtos_unidades cascade;
DROP TABLE recebimentos cascade;
DROP TABLE recebimentos_vencimentos cascade;

--================================================================================================================
-- Categorias financeiras
create table fin_categorias (
   categoria integer not null,
   descri varchar(60) not null,
   recno serial not null
);

alter table fin_categorias add constraint pk_fin_categorias primary key(categoria);
alter table fin_categorias add constraint uk_fin_categorias_descri unique(descri);

insert into sys_errors (constraint_, descri, solucao) values ('pk_fin_categorias', 'Categoria já cadastrada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_fin_categorias_descri', 'Descrição já cadastrada.', '');


--================================================================================================================
-- Naturezas financeiras
create table fin_naturezas (
   natureza integer not null,
   categoria integer not null,
   descri varchar(60) not null,
   tipo varchar(1) not null,
   recno serial not null
);

alter table fin_naturezas add constraint pk_fin_naturezas primary key(natureza);
alter table fin_naturezas add constraint uk_fin_naturezas_descri unique(descri);
alter table fin_naturezas add constraint uk_fin_naturezas_recno unique(recno);
alter table fin_naturezas add constraint ck_fin_naturezas_tipo check(tipo in ('R', 'D'));
alter table fin_naturezas add constraint fk_fin_naturezas_categoria foreign key(categoria)
   references fin_categorias(categoria) on update cascade;

insert into sys_errors (constraint_, descri, solucao) values ('pk_fin_naturezas', 'Natureza já cadastrada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_fin_naturezas_descri', 'Descrição já cadastrada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_naturezas_tipo', 'Tipo da natureza deve ser R(eceita) ou D(espesa).', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_naturezas_categoria', 'Categoria financeira não pode ser excluída porque é referenciada por uma ou mais naturezas financeiras.', '');

-- ==================================================================================================================
-- Cadastro de tabelas

create table sys_tables (
   recno serial not null,
   tabela varchar(100) not null,
   descri varchar(60) not null
);

alter table sys_tables add constraint pk_sys_tables primary key (recno);
alter table sys_tables add constraint uk_sys_tables_tabela unique (tabela);
alter table sys_tables add constraint uk_sys_tables_descri unique (descri);

insert into sys_errors (constraint_, descri, solucao) values ('pk_sys_tables', 'Recno da tabela sys_tables duplicado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_sys_tables_tabela', 'Nome de tabela duplicado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_sys_tables_descri', 'Descrição da tabela duplicada.', '');

-- carga da tabela
insert into sys_tables (tabela, descri) values ('fin_pagar', 'Contas a Pagar');
insert into sys_tables (tabela, descri) values ('fin_receber', 'Contas a Receber');
insert into sys_tables (tabela, descri) values ('fin_banco', 'Movimento Bancário');
insert into sys_tables (tabela, descri) values ('fatu_os', 'Faturamento');


-- ==================================================================================================================
-- Cadastro de bancos

create table bancos (
   banco integer not null,
   descri varchar(60) not null,
   recno serial not null
);

alter table bancos add constraint pk_bancos primary key (banco);
alter table bancos add constraint uk_bancos_descri unique (descri);
alter table bancos add constraint uk_bancos_recno unique (recno);

insert into sys_errors (constraint_, descri, solucao) values ('pk_bancos', 'Banco já cadastrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('uk_bancos_descri', 'Nome do banco duplicado.', 'Mudar o nome.');

-- ==================================================================================================================
-- Cadastro de contas corrente
create table cc (
   cc varchar(25) not null,
   banco integer not null,
   agencia varchar(25),
   descri varchar(60),
   conciliacao date,
   recno serial not null
);

alter table cc add constraint pk_cc primary key (cc);
alter table cc add constraint fk_cc_banco foreign key(banco)
   references bancos(banco) on update cascade;
alter table cc add constraint uk_cc_recno unique (recno);

insert into sys_errors (constraint_, descri, solucao) values ('pk_cc', 'Conta corrente já cadastrada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_cc_banco', 'Banco não pode ser excluído pois possui contas correntes associadas.', 'Excluir contas corrente.');

-- ==================================================================================================================
-- Cadastro de saldos de contas corrente
create table cc_saldos (
   cc varchar(25) not null,
   data date not null,
   saldo_anterior numeric(15,2) default 0 not null,
   entradas numeric(15,2) default 0 not null,
   saidas numeric(15,2) default 0 not null,
   saldo numeric(15,2) default 0 not null,
   recno serial not null
);

alter table cc_saldos add constraint pk_cc_saldos primary key (cc, data);
alter table cc_saldos add constraint fk_cc_saldos foreign key(cc)
   references cc(cc) on update cascade on delete cascade;
alter table cc_saldos add constraint uk_cc_saldos_recno unique (recno);
alter table cc_saldos add constraint ck_cc_saldos_entradas check (entradas >= 0);
alter table cc_saldos add constraint ck_cc_saldos_saidas check (saidas >= 0);

insert into sys_errors (constraint_, descri, solucao) values ('pk_cc_saldos', 'Deve haver apenas um saldo bancário por conta por dia.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_cc_saldos', 'O saldo bancário deve ser criado associado a uma conta bancária.', 'Informar conta corrente.');
insert into sys_errors (constraint_, descri, solucao) values ('ck_cc_saldos_entradas', 'Valor do total de entradas do dia não pode ser negativo.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_cc_saldos_saidas', 'Valor do total de saidas do dia não pode ser negativo.', '');

--================================================================================================================
-- Títulos a receber
create table fin_receber (
   recno serial not null,
   os integer,
   natureza integer not null,
   id_cli integer not null,
   docto varchar(50),
   criacao timestamp default localtimestamp not null,
   emissao date not null,
   vencimento date not null,
   vencimento_real date not null,
   baixa date,
   valor numeric(12,2) default 0.00 not null,
   valor_baixado numeric(12,2) default 0.00 not null,
   obs text,
   cc varchar(25)
);

alter table fin_receber add constraint pk_fin_receber primary key(recno);
alter table fin_receber add constraint ck_fin_receber_vencimento check (vencimento >= emissao);
alter table fin_receber add constraint ck_fin_receber_vencimento_real check (vencimento_real >= emissao);
alter table fin_receber add constraint ck_fin_receber_baixa check (baixa >= emissao);
alter table fin_receber add constraint ck_fin_receber_valor check (valor >= 0);
alter table fin_receber add constraint ck_fin_receber_valor_baixado check (valor_baixado >= 0);
alter table fin_receber add constraint fk_fin_receber_os foreign key (os)
   references tb_orcamentos(os) on update cascade;
alter table fin_receber add constraint fk_fin_receber_id_cli foreign key (id_cli)
   references tbclientes(codigo) on update cascade;
alter table fin_receber add constraint fk_fin_receber_natureza foreign key (natureza)
   references fin_naturezas(natureza) on update cascade;
alter table fin_receber add constraint fk_fin_receber_cc foreign key (cc)
   references cc(cc) on update cascade;

insert into sys_errors (constraint_, descri, solucao) values ('pk_fin_receber', 'Título a receber já cadastrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_receber_vencimento', 'A data de vencimento do título não deve ser anterior a data de emissão.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_receber_vencimento_real', 'A data de vencimento real do título não deve ser anterior a data de emissão.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_receber_baixa', 'A data de baixa do título não deve ser anterior a data de emissão.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_receber_valor', 'O valor do título não pode ser negativo.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_receber_valor_baixado', 'O valor baixado do título não pode ser negativo.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_receber_os', 'A ordem de serviço informada no título não pode ser encontrada.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_receber_id_cli', 'O código do cliente informado no título não pode ser encontrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_receber_natureza', 'Natureza referencia por títulos a receber não pode ser excluída.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_receber_cc', 'Conta corrente referencia por títulos a receber não pode ser excluída.', '');

-- Títulos a pagar
create table fin_pagar (
   recno serial not null,
   natureza integer not null,
   id_forn integer not null,
   docto varchar(50),
   criacao timestamp default localtimestamp not null,
   emissao date not null,
   vencimento date not null,
   vencimento_real date not null,
   baixa date,
   valor numeric(12,2) default 0.00 not null,
   valor_baixado numeric(12,2) default 0.00 not null,
   obs text,
   cc varchar(25)
);

alter table fin_pagar add constraint pk_fin_pagar primary key(recno);
alter table fin_pagar add constraint ck_fin_pagar_vencimento check (vencimento >= emissao);
alter table fin_pagar add constraint ck_fin_pagar_vencimento_real check (vencimento_real >= emissao);
alter table fin_pagar add constraint ck_fin_pagar_baixa check (baixa >= emissao);
alter table fin_pagar add constraint ck_fin_pagar_valor check (valor >= 0);
alter table fin_pagar add constraint ck_fin_pagar_valor_baixado check (valor_baixado >= 0);
alter table fin_pagar add constraint fk_fin_pagar_natureza foreign key (natureza)
   references fin_naturezas(natureza) on update cascade;
alter table fin_pagar add constraint fk_fin_pagar_id_forn foreign key (id_forn)
   references fornecedores(codigo) on update cascade;
alter table fin_receber add constraint fk_fin_pagar_cc foreign key (cc)
   references cc(cc) on update cascade;


insert into sys_errors (constraint_, descri, solucao) values ('pk_fin_pagar', 'Título a pagar já cadastrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_pagar_vencimento', 'A data de vencimento do título não deve ser anterior a data de emissão.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_pagar_vencimento_real', 'A data de vencimento real do título não deve ser anterior a data de emissão.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_pagar_baixa', 'A data de baixa do título não deve ser anterior a data de emissão.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_pagar_valor', 'O valor do título não pode ser negativo.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_pagar_valor_baixado', 'O valor baixado do título não pode ser negativo.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_pagar_id_forn', 'O código do fornecedor informado no título não pode ser encontrado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_pagar_natureza', 'Natureza referencia por títulos a pagar não pode ser excluída.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_pagar_cc', 'Conta corrente referencia por títulos a pagar não pode ser excluída.', '');

create table sys_cfg(
   natureza_fat   integer
);

alter table sys_cfg add constraint fk_sys_cfg_natureza_fat
   foreign key(natureza_fat) references fin_naturezas(natureza)
   on update cascade on delete set null;

-- ==================================================================================================================
-- Movimento bancário
create table fin_banco (
   recno serial not null,
   cc varchar(25) not null,
   data date not null,
   docto varchar(25),
   historico varchar(80) not null,
   tipo varchar(1) not null,
   valor numeric(15,2) default 0 not null,
   compensado boolean default false not null,
   origem integer not null,
   origem_recno integer not null,
   natureza integer not null
);

alter table fin_banco add constraint pk_fin_banco primary key(recno);
alter table fin_banco add constraint fk_fin_banco_cc foreign key(cc)
   references cc(cc) on update cascade;
alter table fin_banco add constraint fk_fin_banco_origem foreign key(origem)
   references sys_tables(recno) on update cascade;
alter table fin_banco add constraint fk_fin_banco_natureza foreign key(natureza)
   references fin_naturezas(natureza) on update cascade;
alter table fin_banco add constraint ck_fin_banco_valor check(valor > 0);
alter table fin_banco add constraint ck_fin_banco_tipo check(tipo in ('E', 'S'));

insert into sys_errors (constraint_, descri, solucao) values ('pk_fin_banco', 'Movimento bancário duplicado.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_banco_cc', 'Conta bancária não pode ser excluída porque é referenciada pelo movimento bancário.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_banco_origem', 'Tabela não pode ser excluída porque é referenciada pelo movimento bancário.', '');
insert into sys_errors (constraint_, descri, solucao) values ('fk_fin_banco_natureza', 'Natureza financeira não pode ser excluída porque é referenciada pelo movimento bancário.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_banco_valor', 'Lançamentos bancários devem ter valor maior que zero.', '');
insert into sys_errors (constraint_, descri, solucao) values ('ck_fin_banco_tipo', 'Tipo do lançamento bancário deve ser E (entrada) ou S (saída).', '');