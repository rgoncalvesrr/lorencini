set session authorization lorencini;

drop table pedido_amostras; 
alter table pedido_amostras_serv rename to pedido_amostras;
ALTER TABLE pedido_amostras_serv_recno_seq rename to pedido_amostras_recno_seq;
ALTER TABLE pedido_amostras
   ALTER COLUMN recno SET DEFAULT nextval('pedido_amostras_recno_seq'::regclass);

alter table labamostras 
   rename coletor to amostrador;
   
alter table labamostras    
   alter estado set default(10),
   add ean39 varchar(50),
   add emi_dh timestamp without time zone NOT NULL DEFAULT ('now'::text)::timestamp without time zone,
   add emi_usr character varying(20),  
   add rem_dh timestamp without time zone,
   add ret_dh timestamp without time zone,    
   add imp_dh timestamp without time zone,
   add imp_usr varchar(20),
   add rem_usr varchar(20),
   add rem_tr text,
   add ret_usr varchar(20),
   add ret_tr text,
   add canc_dh timestamp without time zone,
   add canc_usr varchar(20),
   add canc_mot text,
   add validade date,
   add origem_recno integer,
   add qtd qtd_ NOT NULL,
   add consumido qtd_ NOT NULL,
   add descartado qtd_ NOT NULL,
   add saldo qtd_ NOT NULL,  
   add situacao integer DEFAULT 1,     
   add CONSTRAINT fk_labamostras_3 FOREIGN KEY (origem)
      REFERENCES public.sys_tables (recno) MATCH SIMPLE
      ON UPDATE CASCADE ON DELETE NO ACTION,   
   add CONSTRAINT ck_labamostras_1 CHECK (saldo::numeric = (qtd::numeric - consumido::numeric - descartado::numeric)),
   add CONSTRAINT ck_labamostras_2 CHECK (qtd::numeric >= 0::numeric),
   add CONSTRAINT ck_labamostras_3 CHECK (consumido::numeric >= 0::numeric),
   add CONSTRAINT ck_labamostras_4 CHECK (descartado::numeric >= 0::numeric);

alter table labamostras disable trigger all;  

update labamostras a
   set ean39 = b.ean39, emi_dh = b.emi_dh, emi_usr = b.emi_usr, rem_dh = b.rem_dh, ret_dh = b.ret_dh,
       imp_dh = b.imp_dh, imp_usr = b.imp_usr, rem_usr = b.rem_usr, rem_tr = b.rem_tr, ret_usr = b.ret_usr,
       ret_tr = b.ret_tr, canc_dh = b.canc_dh, canc_usr = b.canc_dh, canc_mot = b.canc_mot, validade = b.validade,
       origem_recno = b.origem_recno, qtd = b.qtd, consumido = b.consumido, descartado = b.descartado, saldo = b.saldo,
       situacao = a.situacao
  from comodato b
 where b.recno = a.comodato_recno;

alter table labamostras enable trigger all;

alter table labamostras
  alter emi_dh set not null,
  alter emi_usr set not null,
  alter origem_recno set not null;

ALTER TABLE public.pedido_amostras
  RENAME CONSTRAINT pk_pedido_amostras_serv TO pk_pedido_amostras;

alter table pedido_amostras
   add amostra integer,
   add constraint fk_pedido_amostras_1 
	   foreign key (pedido,codserv) references pedido_serv(pedido,codserv)
   	on update cascade on delete cascade,
   add constraint fk_pedido_amostras_2
   	foreign key (amostra) references labamostras(recno)
   	on update cascade on delete restrict;

create index idx_labamostras_1 on labamostras(codigo);
create index idx_labamostras_2 on labamostras(codigo) where (saldo > 0);
create index idx_labamostras_3 on labamostras(codigo) where (consumido > 0);
create index idx_labamostras_4 on labamostras(codigo) where (descartado > 0);
create index idx_labamostras_5 on labamostras(pedido);
create index idx_labamostras_6 on labamostras(codigo, cliente);
create index idx_labamostras_7 on labamostras(canc_usr);
create index idx_labamostras_8 on labamostras(emi_usr);
create index idx_labamostras_9 on labamostras(imp_usr);
create index idx_labamostras_10 on labamostras(origem);
create index idx_labamostras_11 on labamostras(rem_usr);
create index idx_labamostras_12 on labamostras(ret_usr);
create index idx_labamostras_13 on labamostras(equip_recno);
create index idx_labamostras_14 on labamostras(revisor);
create index idx_labamostras_15 on labamostras(tpamostra_recno);

alter table labamostras disable trigger all;

insert into labamostras
  (codigo, cliente, rem_dh, rem_usr, rem_tr, ret_dh, ret_usr, ret_tr, emi_dh, emi_usr, imp_dh, imp_usr, 
   canc_dh, canc_usr, canc_mot, validade, origem, origem_recno, qtd, consumido, descartado, saldo, comodato_recno, situacao)
select a.codigo, a.codigo, a.rem_dh, a.rem_usr, a.rem_tr, a.ret_dh, a.ret_usr, a.ret_tr, a.emi_dh, a.emi_usr, a.imp_dh, a.imp_usr, 
   a.canc_dh, a.canc_usr, a.canc_mot, a.validade, a.origem, a.origem_recno, a.qtd, a.consumido, a.descartado, a.saldo,
   a.recno, a.situacao
  from comodato a
       left join labamostras b
         on b.comodato_recno = a.recno
where b.recno is null;

update labamostras set estado = 60 where estado = 3; -- Utilizada (antiga executada)
update labamostras set estado = 50 where estado = 2; -- Disponível (antiga execução)
update labamostras set estado = 40 where estado = 1; -- Recebida (antiga digitação)

alter table labamostras enable trigger all;

alter table pedido_amostras disable trigger all;

update pedido_amostras a
   set amostra = b.recno
  from labamostras b
 where b.comodato_recno = a.comodato_recno; 

alter table pedido_amostras enable trigger all;

ALTER TABLE public.pedido_amostras 
  alter amostra set not null, 
  DROP CONSTRAINT pk_pedido_amostras,
  add constraint pk_pedido_amostras primary key (pedido, codserv, amostra);

alter table labret disable trigger all;

alter table labret add amostra integer;

update labret a
   set amostra = b.recno
  from labamostras b
 where b.comodato_recno = a.comodato_recno;

alter table labret 
  alter amostra set not null,
  drop comodato_recno,
  add constraint fk_labret_1 foreign key(amostra) references labamostras(recno)
    on update cascade on delete restrict;

create index idx_labret_1 on labret(amostra);

alter table labret enable trigger all;

alter table labprocxequip disable trigger all;

alter table labprocxequip 
  add amostra integer,
  add constraint fk_labprocxequip_1 foreign key(amostra)
     references labamostras(recno) on update cascade on delete restrict;

create index idx_labprocxequip_1 on labprocxequip(amostra);

update labprocxequip a
   set amostra = b.recno
  from labamostras b
 where b.comodato_recno = a.comodato_recno; 


alter table cota
   add remessa boolean default(false),
   add laboratorio boolean default(false);

alter table cota disable trigger all;
update cota set remessa = true where (frascos > 0 or seringas > 0);
update cota a
   set laboratorio = true
  from (select cotacao
          from cota_serv cs
               join servicos s
                 on s.codserv = cs.servico
               join servicos_grupo sg
                 on sg.recno = s.grupo
                and sg.laboratorio
         group by cotacao) b
 where b.cotacao = a.recno;
alter table cota enable trigger all;

DROP VIEW public.vcotacomodato;

CREATE OR REPLACE VIEW vcotacomodato AS 
 SELECT r.cotacao,
    e.amostra
   FROM cota c
     JOIN labproc r ON r.cotacao = c.recno
     JOIN labprocxequip e ON e.labproc_recno = r.recno;

alter table labprocxequip 
   alter amostra set not null,
   drop comodato_recno cascade;

alter table labprocxequip enable trigger all;

update labequipxcli a
   set subest = b.labsubest_recno, tag = b.tag, local = b.local
  from labamostras b
 where b.labsubest_recno is not null   
   and a.codigo = b.codigo
   and a.equip = b.equip_recno
   and a.subest is null;

create table labamostras_hist(   
   amostra integer not null,
   estado integer not null,   
   ocorrencia timestamp default localtimestamp,
   historico text,
   username varchar(20) not null,
   recno serial not null,
   constraint pk_labamostras_hist primary key(amostra, estado),
   constraint fk_labamostras_hist_1 foreign key(amostra)
      references labamostras(recno)
      on update cascade on delete cascade,
   constraint fk_labamostras_hist_2 foreign key(username)
      references sys_users(username)
      on update cascade on delete restrict   
);

create index idx_labamostras_hist_1 on labamostras_hist(username);

insert into labamostras_hist
   (amostra, estado, ocorrencia, historico, username)
select recno, 20, imp_dh, 'Impressão etiqueta', imp_usr 
  from labamostras
 where imp_dh is not null;
 
insert into labamostras_hist
   (amostra, estado, ocorrencia, historico, username)
select recno, 30, rem_dh, coalesce(rem_tr, 'Etiqueta da amostra enviada'), rem_usr 
  from labamostras
 where rem_dh is not null; 

insert into labamostras_hist
   (amostra, estado, ocorrencia, historico, username)
select recno, 40, ret_dh, coalesce(ret_tr, 'Etiqueta da amostra enviada'), ret_usr 
  from labamostras
 where ret_dh is not null; 

insert into labamostras_hist
   (amostra, estado, ocorrencia, historico, username)
select recno, 50, entrada, 'Recebimento da amostra', revisor
  from labamostras
 where estado in (50, 60); 

insert into labamostras_hist
   (amostra, estado, historico, username)
select recno, 60, 'Saldo total utilizado', revisor
  from labamostras
 where estado = 60; 

alter table labamostras_rel rename amostra_recno to amostra;
alter table tb_entrada_amostra rename amostra_recno to amostra;
ALTER TABLE public.labamostras_rel DROP CONSTRAINT fk_labamostras_rel_amostra_recno;

alter table labamostras_rel 
   alter status set default(0),
   add destinatario varchar(100),
   add cliente integer,
   add pedido integer,
   add os integer,
   add constraint fk_labamostras_rel_2 foreign key(cliente)
      references tbclientes(codigo),
   add constraint fk_labamostras_rel_3 foreign key(pedido)
      references pedido(recno) on update cascade on delete restrict,
	add constraint fk_labamostras_rel_4 foreign key(amostra)
      references labamostras(recno) on update cascade on delete restrict,
   add constraint fk_labamostras_rel_5 foreign key(pedido, codserv, amostra)
      references pedido_amostras(pedido, codserv, amostra) on update cascade on delete restrict,
   add constraint fk_labamostras_rel_6 foreign key(os)
      references tb_orcamentos(os) on update cascade on delete restrict;

create index idx_labamostras_rel_10 on labamostras_rel(cliente);
create index idx_labamostras_rel_11 on labamostras_rel(pedido);
create index idx_labamostras_rel_12 on labamostras_rel(pedido, codserv, amostra);
create index idx_labamostras_rel_13 on labamostras_rel(os);

alter table labamostras_rel disable trigger all;
update labamostras_rel a
   set destinatario = b.destinatario, cliente = b.cliente, os = b.os, pedido = c.pedido
  from labamostras b, tb_orcamentos c
 where b.recno = a.amostra
   and b.os = c.os;
delete from labamostras_rel where os is null;   
alter table labamostras_rel alter os set not null;      
alter table labamostras_rel enable trigger all;

-- Limpando tabelas
alter table labamostras
   drop entrada cascade,
   drop comodato_recno,
   drop os,
   drop osc,   
   drop contato,
   drop revisor,
   drop emi_dh,
   drop emi_usr,
   drop imp_dh,
   drop imp_usr,
   drop rem_dh,
   drop rem_usr,
   drop rem_tr,
   drop ret_dh,
   drop ret_usr,
   drop ret_tr,
   drop canc_dh,
   drop canc_usr,
   drop canc_mot,
   drop cliente cascade;

alter table labprocxequip
	drop codigo cascade,
	drop equip_recno cascade;

alter table pedido_amostras
   drop comodato_recno cascade;   

create or replace view vcomodatoxproc as
select c.*, e.labproc_recno
  from labamostras c
       join labprocxequip e
         on e.amostra = c.recno;   

ALTER TABLE public.labport DROP CONSTRAINT ck_labport_cnpj;

ALTER TABLE public.labport
    ADD CONSTRAINT ck_labport_cnpj CHECK (sys_cnpj_check(cnpj) = 0 or sys_cpf_check(cpf) = 0);

drop table job_disjuntor_mt_parte2 cascade;
drop table job_chave_sec_parte2 cascade;
drop table job_chave_sec cascade;
drop table job cascade;
drop table job_para_raio_mt cascade;
drop table job_cabo_mt_parte3 cascade;
drop table job_transf_potencia_bt_parte2 cascade;
drop table job_transf_potencia_mt cascade;
drop table job_transf_potencia_mt_parte6 cascade;
drop table job_transf_potencial_mt_parte2 cascade;
drop table job_termografia_parte2 cascade;
drop table job_para_raio_mt_parte2 cascade;
drop table job_cabo_mt cascade;
drop table job_transf_potencia_mt_parte3 cascade;
drop table job_transf_corrente_mt cascade;
drop table job_transf_potencial_bt cascade;
drop table job_disjuntor_bt_parte2 cascade;
drop table job_transf_potencial_mt cascade;
drop table job_disjuntor_mt cascade;
drop table job_disjuntor_bt cascade;
drop table job_cabo_mt_parte2 cascade;
drop table job_termografia_parte3 cascade;
drop table job_transf_potencia_mt_parte2 cascade;
drop table job_termografia_roteiro cascade;
drop table job_transf_potencia_mt_parte4 cascade;
drop table job_transf_potencia_mt_parte5 cascade;
drop table job_transf_corrente_mt_parte2 cascade;
drop table job_transf_potencia_bt cascade;
drop table job_transf_potencial_at cascade;
drop table job_transf_potencial_at_parte2 cascade;
drop table job_transf_potencial_bt_parte2 cascade;
drop table job_termografia cascade;
drop table job_termografia_imagens cascade;
drop table tb_orcamentos_lucratividade_hotel cascade;
drop table tb_orcamentos_lucratividade_maoobra cascade;
drop table tb_orcamentos_lucratividade_mobra cascade;
drop table tb_orcamentos_lucratividade_pedagio cascade;
drop table tb_orcamentos_lucratividade_refeicao cascade;
drop table tb_orcamentos_lucratividade_veiculos cascade;
drop table tb_orcamentos_lucratividade_combustivel cascade;
drop table tb_orcamentos_pedido_compra_materiais cascade;
drop table tb_orcamentos_pedido_compra_vencimentos cascade;
drop table i_caracteristtrafos cascade;
drop table i_caractreguladores cascade;
drop table i_cromatografiasreguladores cascade;
drop table i_cromatografiatrafos cascade;
drop table i_fisicoquimicosreguladores cascade;
drop table i_fisicoquimicostrafos cascade;
drop table i_reguladorescaract cascade;
drop table i_subestacoessiglas cascade;
drop table i_trafoscaract cascade;

delete from docs where _tabela = 187;

ALTER TABLE public.labproc DROP CONSTRAINT ck_labproc_situacao;

ALTER TABLE public.labproc
    ADD CONSTRAINT ck_labproc_situacao CHECK (situacao >= 0 AND situacao <= 7);

create table cota_aprov(
   recno serial not null,
   aprovacao timestamp default clock_timestamp() not null,
   username varchar(20) not null,
   cotacao integer not null,
   frete moeda_ not null,
   frascos integer,
   seringas integer,
   vlmat moeda_ not null,
   vlserv moeda_ not null,
   vlmobra moeda_ not null,
   vltotal moeda_ not null,
   pedido_cliente varchar(15),
   historico text,
   status integer default(0) not null,
   constraint pkcota_aprov primary key(recno),
   constraint fkcota_aprov_1 foreign key(username)
      references sys_users(username) on update cascade on delete restrict,
   constraint fkcota_aprov_2 foreign key(cotacao)
      references cota(recno) on update cascade on delete restrict
);

create index idxcota_aprov_1 on cota_aprov(cotacao);
create index idxcota_aprov_2 on cota_aprov(username);

alter table cota_serv 
  add lote_aprov integer,
  add constraint fkcota_serv_4 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null;

create index idx_cota_serv_4 on cota_serv(cotacao) where lote_aprov is null;

alter table cota_mat
  add lote_aprov integer,
  add constraint fkcota_mat_4 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null;

create index idx_cota_mat_4 on cota_mat(cotacao) where lote_aprov is null;

alter table cota_mo
  add lote_aprov integer,
  add constraint fkcota_mo_4 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null; 

create index idx_cota_mo_4 on cota_mo(cotacao) where lote_aprov is null;

alter table fin_caixa
  add lote_aprov integer,
  add constraint fk_fin_caixa_9 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null; 

alter table pedido
  add lote_aprov integer,
  add constraint fkpedido_10 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null;

create index idx_pedido_1 on pedido(recno) where lote_aprov is null;

alter table pedido_mat
  add lote_aprov integer,
  add constraint fkpedido_mat_3 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null;

create index idx_pedido_mat_3 on pedido_mat(pedido) where lote_aprov is null;

alter table pedido_serv
  add lote_aprov integer,
  add constraint fkpedido_serv_3 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null;

create index idx_pedido_serv_3 on pedido_serv(pedido) where lote_aprov is null;

alter table pedido_mo
  add lote_aprov integer,
  add constraint fkpedido_mo_3 foreign key(lote_aprov)
    references cota_aprov(recno) on update cascade on delete set null;

create index idx_pedido_mo_3 on pedido_mo(pedido) where lote_aprov is null;

-- ==================================================================================================================
--
-- GATILHOS
--
-- ==================================================================================================================
CREATE TRIGGER b_pedido_amostras
   BEFORE INSERT OR UPDATE OR DELETE
   ON pedido_amostras
   FOR EACH ROW
   EXECUTE PROCEDURE b_pedido_amostras();

CREATE TRIGGER b_labamostras_hist
   BEFORE INSERT OR UPDATE OR DELETE
   ON labamostras_hist
   FOR EACH ROW
   EXECUTE PROCEDURE b_labamostras_hist();

CREATE TRIGGER a_cota_aprov
   AFTER INSERT OR UPDATE OR DELETE
   ON cota_aprov
   FOR EACH ROW
   EXECUTE PROCEDURE a_cota_aprov();