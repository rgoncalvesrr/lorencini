/**
   Processamento de ações do pedido

   @author    Ricardo Gonçalves
   @date      28/02/2016 14:12:29
   @trigger   pedido A IUD

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   12/04/2019  Ricardo
      [+] Cancelamento da remessa quando o pedido é cancelado
*/
CREATE OR REPLACE FUNCTION a_pedido()
  RETURNS trigger AS
$$
Declare
   r              record;
   icoleta        integer;
   itable_        integer;
   ilastserv      servicos.codserv%type;
   irelato_recno  labrel.recno%type;
   iqtd           pedido_serv.qtd%type;
   nunitario      pedido_serv.unitario%type;   
   tdescricao     tb_orcamentos.descricao%type;
   ios            tb_orcamentos.os%type;
   iamostra       labamostras.recno%type;
   LF             text;
   irecno         tb_orcamentos.recno%type;
   ldelcorreio    boolean;
BEGIN
   LF := chr(13)||chr(10);

   if tg_op = 'INSERT' then
      -- Amarrando despesas ao pedido
      perform fin_caixaVincularPedido(new.codigo, new.recno);
   else      
      -- Exclui último frete por correio gerado
      ldelcorreio := tg_op = 'DELETE';
      if not ldelcorreio then
         ldelcorreio := not new.remessa;
      end if;

      if ldelcorreio then
         delete 
           from correio
          where recno = old.correio;          
      end if;
   end if;

   if tg_op = 'UPDATE' then
      if old.status = 10 and new.status = 20 then -- Aprovação Financeira
      elsif old.status = 20 and new.status = 30 then -- Autorização para execução

      elsif old.status = 30 and new.status = 40 then -- Gerar remessa
         insert into labproc
            (descri,                 codigo,     frascos,     seringas,     envio, 
             coleta,                 frete,      correio,     pedido)
         values
            ('Pedido ' || new.recno, new.codigo, new.frascos, new.seringas, new.envio, 
             new.coleta,             new.frete,  new.correio, new.recno);
      elsif old.status in (30, 40) and new.status = 50 then -- Aguardando amostras
         
      elsif old.status in (30, 50) and new.status = 60 then -- Produção
         -- Gera ordem de serviço
         --------------------------------------------------------------------------------------------------------
         select coalesce(max(os), 0) + 1
           into ios
           from tb_orcamentos;

         tdescricao := format('OS gerada automaticamente pelo pedido %s as %s ', new.recno, to_char(localtimestamp, 'DD/MM/YYYY HH24:MI:SS'));

         if new.laboratorio then
            -- Totalizando amostras
            select sum(amostras) 
             into iqtd
             from pedido_serv 
            where pedido = new.recno;

            tdescricao := tdescricao || LF || format('Quantidade de amostras do pedido %s.', to_char(iqtd, 'FM999999990'));
         end if;

         tdescricao := tdescricao || LF || format('Obs. pedido: %s', trim(new.obs));

         irecno := nextval(('tb_orcamentos_recno_seq'::text)::regclass);

         -- Registra a OS como aprovada status_ = 1
         insert into tb_orcamentos (
            data,            idcliente,       descricao,   os,              status_,
            type_,           grupo,           item,        pedido,          contato,
            contato_fin,     contato_tec,     recno,       pedidocliente)
         Values (
            current_date,    new.codigo,      tdescricao,  ios,             sys_iif(new.laboratorio, 1, 3),
            0,               new.grupo,       98,          new.recno,       new.contato,
            new.contato_fin, new.contato_tec, irecno,      new.pedido_cliente);

         -- Inserindo materiais
         insert into orca_mat
            (codigo,      qtd,    un,         unitario,    icms_compra,    total,     vl_venda,
             material,    exptot, os)
         select pm.material, pm.qtd, p.unidade, pm.unitario, pm.picms,       pm.vtotal, pm.vvenda,
                p.descricao, true,   ios
           from pedido_mat pm
                join produtos p
                  on pm.material = p.codigo
          where pm.pedido = new.recno;

         -- Inserindo Naturezas
         insert into servicos_os
            (os,  codserv, qtd, un,      valor,    vl_venda)
         select ios, a.codserv, a.qtd, s.un, a.unitario, a.vvenda
           from pedido_serv a
                join servicos s
                  on s.codserv = a.codserv
          where a.pedido = new.recno;

         -- Inserindo Mão-de-Obra
         insert into tb_orcamentos_lucratividade_lorencini(
            os,           func,            qtde,             unitario,      vl_venda,         percentual,
            uteis_dias,   uteis_hrs_dia,   uteis_vlr_hora,   sabado_dias,   sabado_hrs_dia,   sabado_vlr_hora,
            domingo_dias, domingo_hrs_dia, domingo_vlr_hora, adic_not_dias, adic_not_hrs_dia, adic_not_vlr_hora,
            valor_total)
         SELECT
            ios,          funcao,           qtd,            unitario,      vvenda,            percentual,
            uteis_dias,   uteis_hrs_dias,   uteis_vl_hrs,   sabado_dias,   sabado_hrs_dias,   sabado_vl_hrs,
            domingo_dias, domingo_hrs_dias, domingo_vl_hrs, adic_not_dias, adic_not_hrs_dias, adic_not_vl_hrs,
            total
         FROM pedido_mo
         where pedido = new.recno;

         perform cpDocParaDoc(
            sys_origem('orca_grupo'), 1,
            sys_origem('tb_orcamentos'), irecno);

         -- Associando despesas com a cobrança gerada
         update fin_caixa
            set os = ios
          where pedido = new.recno;

         -- Registrando as amostras para geração de relatórios
         itable_ := sys_origem('pedido');

         if new.laboratorio then
            ilastserv := -1;

            for r in (
               select p.amostra, p.codserv,  s.descri
                 from pedido_amostras p
                      join servicos s
                        on s.codserv = p.codserv
                where p.pedido = new.recno
                order by p.codserv, p.amostra)
            loop
               if ilastserv <> r.codserv then
                  select recno 
                    into irelato_recno
                    from labrel 
                   where codserv = r.codserv
                     and ativo 
                   limit 1;

                  ilastserv := r.codserv;
               end if;
               
               if irelato_recno is null then
                  raise '[[O serviço % - % não possui tipo de laudos ativos.]]', r.codserv, r.descri;
               end if;

               -- Insere laudo em estado de digitação
               insert into labamostras_rel 
                  (amostra,  codserv,   relato_recno,  pedido,     os,  cliente,    destinatario,
                   status)
               values
                  (iamostra, r.codserv, irelato_recno, new.pedido, ios, new.cliente, new.destinatario,
                   0);
            end loop;
         end if;
      elsif old.status = 60 and new.status = 70 then -- Executado
      elsif old.status in (20, 30, 40) and new.status = 99 then -- cancelamento
         update labproc
            set situacao = 7
          where pedido = new.recno;
      end if;
   end if;

   if tg_op = 'DELETE' then
      perform sys_flag_del('pedido', old.recno);
   end if;

   return null;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;
