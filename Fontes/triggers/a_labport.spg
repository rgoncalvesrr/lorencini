/**
   Processa operação de remessa / retorno

   @author    Ricardo Gonçalves
   @date      05/01/2011 16:26:47
   @trigger   labport A IUD

   Histórico
   ---------------------------------------------------------------------------------------------------------------------
   Legenda: [-] - Correção / [*] - Recurso modificado/melhorado / [+] - Implementação de recurso

   17/03/2011 10:29:18  v2    Ricardo Gonçalves.
      [+] Implementação da integração com as novas rotinas de controle de amostras.

   29/06/2011 10:33:28  v3    Ricardo Gonçalves.
      [-] Sistema estava gerando amostras para frascos e/ou seringa vazios.

   15/09/2011 18:47:36  v4    Ricardo Gonçalves.
      [*] O sistema passa a gerar as amostras com informação do portador. Essa informação é necessária para garantir que
         a os só entre em execução após o lançamento do tipos de laudos que serão executados para cada amostra.

   11/10/2011 09:31:17  v5    Ricardo Gonçalves.
      [*] Inclusão da data e hora na geração da OS.

   12/01/2016 16:20:29  v6    Ricardo Gonçalves.
      [*] Checagem do fechamento dos volumes e impressão das etiquetas.

*/
CREATE OR REPLACE FUNCTION a_labport()
  RETURNS trigger AS
$$
Declare
   icount      integer;
   -- trem_tr     comodato.rem_tr%type;
   voperac     varchar;
   tdescricao  tb_orcamentos.descricao%type;
   ios         tb_orcamentos.os%type;
   ipedido     pedido.recno%type;
   r           pedido%rowtype;
BEGIN
   if tg_op <> 'DELETE' then
      if new.operac = 1 then
         voperac := 'remessa';
      else
         voperac := 'retorno';
      end if;

      -- Atualiza lista de comodatos
      -- trem_tr := coalesce('Processo laboratorial nº ' || new.labproc_recno || '.', '') || 'Operação de ' || voperac || ' nº ' ||
      --    new.recno || ' emitida em ' || to_char(new.emissao, 'DD/MM/YYYY HH24:MI:SS') || chr(13)|| chr(10);
      -- trem_tr := trem_tr || chr(13)|| chr(10) || 'Portador Empresa: ' || new.cnpj || ' - ' || new.empresa;
      -- trem_tr := trem_tr || chr(13)|| chr(10) || 'Portador Agente.: ' || new.cpf || ' - ' || new.portador;

      -- Processando remessa
      if new.operac = 1 then
         -- Marca operação como encerrada
         new.status := 2;

         -- Checa se o processo já foi remetido
         if exists(
            select 1
              from labport
             where labproc_recno = new.labproc_recno
               and operac = new.operac
               and recno <> new.recno)
         then
            raise '[[O processo % foi remetido em % e não pode ser remetido novamente.]]',
               new.labproc_recno, to_char(new.emissao, 'DD/MM/YYYY HH24:MI:SS');
         end if;

         -- Verifica o status do processo
         if exists(
            select 1
              from labproc
             where recno = new.labproc_recno
               and situacao <> 3)
         then
            raise '[[Remssa % não pode despachada porque não passou pela montagem de volumes]]',
               new.labproc_recno;
         end if;

         -- Verifica se todas as etiquetas do processo foram impressas
         select sum(sys_iif(c.estado < 10, 1, 0))
           into icount
           from labamostras c
                join labprocxequip e
                  on e.amostra = c.recno
                 and e.labproc_recno = new.labproc_recno;

         if icount > 0 then
            raise '[[Processo % não pode originar remessas porque % etiqueta(s) não foi(ram) emitida(s).]]',
               new.labproc_recno, icount;
         end if;

         -- Verifica se todas as etiquetas de volume do processo foram impressas
         select sum(sys_iif(v.imp_dh is null or v.status <> 1, 1, 0))
           into icount
           from labvol v
          where v.labproc_recno = new.labproc_recno;

         if icount > 0 then
            raise '[[Processo % não pode ser despachado porque % volume(s) não foi(ram) fechado(s) e/ou emitido(s).]]',
               new.labproc_recno, icount;
         end if;

         update labamostras c
            set estado = 30
           from labprocxequip e
          where e.amostra = c.recno
            and e.labproc_recno = new.labproc_recno;

         -- Atualiza situação do processo
         update labproc
            set situacao = 4, remessa = new.emissao
          where recno = new.labproc_recno;
      end if;

      if tg_op = 'UPDATE' then
         -- Baixa retorno de materiais
         if new.operac = 2 and old.status = 1 and new.status = 2 then
            if not exists(
               select 1
                 from labret
                where labport_recno = new.recno)
            then
               raise '[[A operação de retorno % não pode ser encerrada porque não contem frascos e/ou seringas.]]', new.recno;
            end if;

            -- Registra as baixas
            update labamostras c
               set estado = 40, qtd = ret.qtd, saldo = ret.qtd
              from labret ret
             where ret.amostra = c.recno
               and ret.labport_recno = new.recno;
         end if;            
      end if;

      return new;
   else
      return old;
   end if;
END;
$$
  LANGUAGE 'plpgsql' VOLATILE;
